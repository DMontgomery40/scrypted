{"version":3,"file":"main.nodejs.js","mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,WAAW,GAAG,uBAAuB,GAAG,0BAA0B;AAClE,aAAa,mBAAO,CAAC,uFAAoB;AACzC,gBAAgB,mBAAO,CAAC,uFAAoB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qIAAqI;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;AACf;;;;;;;;;;;ACnMa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB,GAAG,yBAAyB,GAAG,wBAAwB,GAAG,iCAAiC,GAAG,0BAA0B,GAAG,kBAAkB,GAAG,uBAAuB,GAAG,yBAAyB,GAAG,mBAAmB,GAAG,iBAAiB,GAAG,2BAA2B,GAAG,sBAAsB,GAAG,uBAAuB,GAAG,eAAe,GAAG,oBAAoB,GAAG,0BAA0B,GAAG,oCAAoC,GAAG,+BAA+B,GAAG,iCAAiC,GAAG,kBAAkB,GAAG,qBAAqB;AACvjB,qBAAqB;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAigEAAgE,+BAA+B,KAAK;AACrG,oCAAoC;AACpsDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE;AACA;AACA;AACA;AACA,CAAC,gCAAgC,eAAe,KAAK;AACrD;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC,iBAAiB,KAAK;AAC3D;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;;;;;;;;;;ACllCA;AACA;AACA;AACA;AACA;;AAEA,UAAU,+FAAmC;AAC7C,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;AACjB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,qBAAqB;AAC3B;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;ACvLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd,eAAe;AACf,cAAc;AACd,eAAe;AACf,qFAAgC;;AAEhC;AACA;AACA;;AAEA,aAAa;AACb,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA,EAAE,aAAa;AACf,EAAE,aAAa;;AAEf;AACA;;AAEA,kBAAkB,SAAS;AAC3B,6BAA6B;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACzMA;AACA;AACA;AACA;;AAEA;AACA,EAAE,sGAAwC;AAC1C,EAAE;AACF,EAAE,gGAAqC;AACvC;;;;;;;;;;;ACTA;AACA;AACA;;AAEA,UAAU,mBAAO,CAAC,gBAAK;AACvB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA,UAAU,+FAAmC;AAC7C,YAAY;AACZ,WAAW;AACX,kBAAkB;AAClB,YAAY;AACZ,YAAY;AACZ,iBAAiB;;AAEjB;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;;AAEpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,cAAI;AAC3B,4CAA4C,kBAAkB;AAC9D;AACA;;AAEA;AACA;AACA,gBAAgB,mBAAO,CAAC,gBAAK;AAC7B;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACvPA;;AAEA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,uDAAO;AAC7B;AACA,oBAAoB;AACpB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;;;;;;;;;;ACdA,UAAU,mBAAO,CAAC,gBAAK;AACvB;AACA,WAAW,mBAAO,CAAC,kBAAM;AACzB,YAAY,mBAAO,CAAC,oBAAO;AAC3B,eAAe,sDAA0B;AACzC,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,YAAY,mBAAO,CAAC,gEAAS;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc;AACrD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gCAAgC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,mBAAmB;;AAEnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sEAAsE;AACvF,aAAa,kEAAkE;AAC/E,KAAK;AACL,GAAG;AACH;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,0BAA0B;AAClD,mBAAmB;;;;;;;;;;;AC/pBnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sources":["../../../../node_modules/@scrypted/sdk/dist/src/index.js","../../../../node_modules/@scrypted/sdk/dist/types/gen/index.js","../../../../node_modules/debug/src/browser.js","../../../../node_modules/debug/src/debug.js","../../../../node_modules/debug/src/index.js","../../../../node_modules/debug/src/node.js","../../../../node_modules/follow-redirects/debug.js","../../../../node_modules/follow-redirects/index.js","../../../../node_modules/ms/index.js","../../../common/src/http-auth-fetch.ts","../../../packages/auth-fetch/src/auth-fetch.ts","../src/axis-api.ts","../src/main.ts","../../ffmpeg-camera/src/common.ts","../../rtsp/src/rtsp.ts","../../../server/src/fetch/http-fetch.ts","../../../server/src/fetch/index.ts","../external node-commonjs \"assert\"","../external node-commonjs \"crypto\"","../external node-commonjs \"events\"","../external node-commonjs \"fs\"","../external node-commonjs \"http\"","../external node-commonjs \"https\"","../external node-commonjs \"net\"","../external node-commonjs \"stream\"","../external node-commonjs \"tty\"","../external node-commonjs \"url\"","../external node-commonjs \"util\"","../webpack/bootstrap","../webpack/before-startup","../webpack/startup","../webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdk = exports.MixinDeviceBase = exports.ScryptedDeviceBase = void 0;\n__exportStar(require(\"../types/gen/index\"), exports);\nconst index_1 = require(\"../types/gen/index\");\n/**\n * @category Core Reference\n */\nclass ScryptedDeviceBase extends index_1.DeviceBase {\n    constructor(nativeId) {\n        super();\n        this.nativeId = nativeId;\n    }\n    get storage() {\n        if (!this._storage) {\n            this._storage = deviceManager.getDeviceStorage(this.nativeId);\n        }\n        return this._storage;\n    }\n    get log() {\n        if (!this._log) {\n            this._log = deviceManager.getDeviceLogger(this.nativeId);\n        }\n        return this._log;\n    }\n    get console() {\n        if (!this._console) {\n            this._console = deviceManager.getDeviceConsole(this.nativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return deviceManager.getMixinConsole(mediaObject.sourceId, this.nativeId);\n    }\n    _lazyLoadDeviceState() {\n        if (!this._deviceState) {\n            if (this.nativeId) {\n                this._deviceState = deviceManager.getDeviceState(this.nativeId);\n            }\n            else {\n                this._deviceState = deviceManager.getDeviceState();\n            }\n        }\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return deviceManager.onDeviceEvent(this.nativeId, eventInterface, eventData);\n    }\n}\nexports.ScryptedDeviceBase = ScryptedDeviceBase;\n/**\n * @category Mixin Reference\n */\nclass MixinDeviceBase extends index_1.DeviceBase {\n    constructor(options) {\n        super();\n        this._listeners = new Set();\n        this.nativeId = systemManager.getDeviceById(this.id)?.nativeId;\n        this.mixinDevice = options.mixinDevice;\n        this.mixinDeviceInterfaces = options.mixinDeviceInterfaces;\n        this.mixinStorageSuffix = options.mixinStorageSuffix;\n        this._deviceState = options.mixinDeviceState;\n        // 8-11-2022\n        // RpcProxy will trap all properties, and the following check/hack will determine\n        // if the device state came from another node worker thread.\n        // This should ultimately be removed at some point in the future.\n        if (this._deviceState.__rpcproxy_traps_all_properties && deviceManager.createDeviceState && typeof this._deviceState.id === 'string') {\n            this._deviceState = deviceManager.createDeviceState(this._deviceState.id, this._deviceState.setState);\n        }\n        this.mixinProviderNativeId = options.mixinProviderNativeId;\n    }\n    get storage() {\n        if (!this._storage) {\n            const mixinStorageSuffix = this.mixinStorageSuffix;\n            const mixinStorageKey = this.id + (mixinStorageSuffix ? ':' + mixinStorageSuffix : '');\n            this._storage = deviceManager.getMixinStorage(mixinStorageKey, this.mixinProviderNativeId);\n        }\n        return this._storage;\n    }\n    get console() {\n        if (!this._console) {\n            if (deviceManager.getMixinConsole)\n                this._console = deviceManager.getMixinConsole(this.id, this.mixinProviderNativeId);\n            else\n                this._console = deviceManager.getDeviceConsole(this.mixinProviderNativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return deviceManager.getMixinConsole(mediaObject.sourceId, this.mixinProviderNativeId);\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return deviceManager.onMixinEvent(this.id, this, eventInterface, eventData);\n    }\n    _lazyLoadDeviceState() {\n    }\n    manageListener(listener) {\n        this._listeners.add(listener);\n    }\n    release() {\n        for (const l of this._listeners) {\n            l.removeListener();\n        }\n    }\n}\nexports.MixinDeviceBase = MixinDeviceBase;\n(function () {\n    function _createGetState(state) {\n        return function () {\n            this._lazyLoadDeviceState();\n            return this._deviceState?.[state];\n        };\n    }\n    function _createSetState(state) {\n        return function (value) {\n            this._lazyLoadDeviceState();\n            if (!this._deviceState)\n                console.warn('device state is unavailable. the device must be discovered with deviceManager.onDeviceDiscovered or deviceManager.onDevicesChanged before the state can be set.');\n            else\n                this._deviceState[state] = value;\n        };\n    }\n    for (const field of Object.values(index_1.ScryptedInterfaceProperty)) {\n        if (field === index_1.ScryptedInterfaceProperty.nativeId)\n            continue;\n        Object.defineProperty(ScryptedDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n        Object.defineProperty(MixinDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n    }\n})();\nexports.sdk = {};\ntry {\n    let runtimeAPI;\n    try {\n        runtimeAPI = pluginRuntimeAPI;\n    }\n    catch (e) {\n    }\n    Object.assign(exports.sdk, {\n        log: deviceManager.getDeviceLogger(undefined),\n        deviceManager,\n        endpointManager,\n        mediaManager,\n        systemManager,\n        pluginHostAPI,\n        ...runtimeAPI,\n    });\n    try {\n        systemManager.setScryptedInterfaceDescriptors?.(index_1.TYPES_VERSION, index_1.ScryptedInterfaceDescriptors)?.catch(() => { });\n    }\n    catch (e) {\n    }\n}\ncatch (e) {\n    console.error('sdk initialization error, import @scrypted/types or use @scrypted/client instead', e);\n}\nexports.default = exports.sdk;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScryptedMimeTypes = exports.ScryptedInterface = exports.MediaPlayerState = exports.SecuritySystemObstruction = exports.SecuritySystemMode = exports.AirQuality = exports.AirPurifierMode = exports.AirPurifierStatus = exports.ChargeState = exports.LockState = exports.PanTiltZoomMovement = exports.ThermostatMode = exports.TemperatureUnit = exports.FanMode = exports.HumidityMode = exports.ScryptedDeviceType = exports.ScryptedInterfaceDescriptors = exports.ScryptedInterfaceMethod = exports.ScryptedInterfaceProperty = exports.DeviceBase = exports.TYPES_VERSION = void 0;\nexports.TYPES_VERSION = \"0.3.10\";\nclass DeviceBase {\n}\nexports.DeviceBase = DeviceBase;\nvar ScryptedInterfaceProperty;\n(function (ScryptedInterfaceProperty) {\n    ScryptedInterfaceProperty[\"id\"] = \"id\";\n    ScryptedInterfaceProperty[\"info\"] = \"info\";\n    ScryptedInterfaceProperty[\"interfaces\"] = \"interfaces\";\n    ScryptedInterfaceProperty[\"mixins\"] = \"mixins\";\n    ScryptedInterfaceProperty[\"name\"] = \"name\";\n    ScryptedInterfaceProperty[\"nativeId\"] = \"nativeId\";\n    ScryptedInterfaceProperty[\"pluginId\"] = \"pluginId\";\n    ScryptedInterfaceProperty[\"providedInterfaces\"] = \"providedInterfaces\";\n    ScryptedInterfaceProperty[\"providedName\"] = \"providedName\";\n    ScryptedInterfaceProperty[\"providedRoom\"] = \"providedRoom\";\n    ScryptedInterfaceProperty[\"providedType\"] = \"providedType\";\n    ScryptedInterfaceProperty[\"providerId\"] = \"providerId\";\n    ScryptedInterfaceProperty[\"room\"] = \"room\";\n    ScryptedInterfaceProperty[\"type\"] = \"type\";\n    ScryptedInterfaceProperty[\"on\"] = \"on\";\n    ScryptedInterfaceProperty[\"brightness\"] = \"brightness\";\n    ScryptedInterfaceProperty[\"colorTemperature\"] = \"colorTemperature\";\n    ScryptedInterfaceProperty[\"rgb\"] = \"rgb\";\n    ScryptedInterfaceProperty[\"hsv\"] = \"hsv\";\n    ScryptedInterfaceProperty[\"running\"] = \"running\";\n    ScryptedInterfaceProperty[\"paused\"] = \"paused\";\n    ScryptedInterfaceProperty[\"docked\"] = \"docked\";\n    ScryptedInterfaceProperty[\"temperatureSetting\"] = \"temperatureSetting\";\n    ScryptedInterfaceProperty[\"thermostatActiveMode\"] = \"thermostatActiveMode\";\n    ScryptedInterfaceProperty[\"thermostatAvailableModes\"] = \"thermostatAvailableModes\";\n    ScryptedInterfaceProperty[\"thermostatMode\"] = \"thermostatMode\";\n    ScryptedInterfaceProperty[\"thermostatSetpoint\"] = \"thermostatSetpoint\";\n    ScryptedInterfaceProperty[\"thermostatSetpointHigh\"] = \"thermostatSetpointHigh\";\n    ScryptedInterfaceProperty[\"thermostatSetpointLow\"] = \"thermostatSetpointLow\";\n    ScryptedInterfaceProperty[\"temperature\"] = \"temperature\";\n    ScryptedInterfaceProperty[\"temperatureUnit\"] = \"temperatureUnit\";\n    ScryptedInterfaceProperty[\"humidity\"] = \"humidity\";\n    ScryptedInterfaceProperty[\"recordingActive\"] = \"recordingActive\";\n    ScryptedInterfaceProperty[\"ptzCapabilities\"] = \"ptzCapabilities\";\n    ScryptedInterfaceProperty[\"lockState\"] = \"lockState\";\n    ScryptedInterfaceProperty[\"entryOpen\"] = \"entryOpen\";\n    ScryptedInterfaceProperty[\"batteryLevel\"] = \"batteryLevel\";\n    ScryptedInterfaceProperty[\"chargeState\"] = \"chargeState\";\n    ScryptedInterfaceProperty[\"online\"] = \"online\";\n    ScryptedInterfaceProperty[\"fromMimeType\"] = \"fromMimeType\";\n    ScryptedInterfaceProperty[\"toMimeType\"] = \"toMimeType\";\n    ScryptedInterfaceProperty[\"binaryState\"] = \"binaryState\";\n    ScryptedInterfaceProperty[\"tampered\"] = \"tampered\";\n    ScryptedInterfaceProperty[\"powerDetected\"] = \"powerDetected\";\n    ScryptedInterfaceProperty[\"audioDetected\"] = \"audioDetected\";\n    ScryptedInterfaceProperty[\"motionDetected\"] = \"motionDetected\";\n    ScryptedInterfaceProperty[\"ambientLight\"] = \"ambientLight\";\n    ScryptedInterfaceProperty[\"occupied\"] = \"occupied\";\n    ScryptedInterfaceProperty[\"flooded\"] = \"flooded\";\n    ScryptedInterfaceProperty[\"ultraviolet\"] = \"ultraviolet\";\n    ScryptedInterfaceProperty[\"luminance\"] = \"luminance\";\n    ScryptedInterfaceProperty[\"position\"] = \"position\";\n    ScryptedInterfaceProperty[\"securitySystemState\"] = \"securitySystemState\";\n    ScryptedInterfaceProperty[\"pm10Density\"] = \"pm10Density\";\n    ScryptedInterfaceProperty[\"pm25Density\"] = \"pm25Density\";\n    ScryptedInterfaceProperty[\"vocDensity\"] = \"vocDensity\";\n    ScryptedInterfaceProperty[\"noxDensity\"] = \"noxDensity\";\n    ScryptedInterfaceProperty[\"co2ppm\"] = \"co2ppm\";\n    ScryptedInterfaceProperty[\"airQuality\"] = \"airQuality\";\n    ScryptedInterfaceProperty[\"airPurifierState\"] = \"airPurifierState\";\n    ScryptedInterfaceProperty[\"filterChangeIndication\"] = \"filterChangeIndication\";\n    ScryptedInterfaceProperty[\"filterLifeLevel\"] = \"filterLifeLevel\";\n    ScryptedInterfaceProperty[\"humiditySetting\"] = \"humiditySetting\";\n    ScryptedInterfaceProperty[\"fan\"] = \"fan\";\n    ScryptedInterfaceProperty[\"applicationInfo\"] = \"applicationInfo\";\n})(ScryptedInterfaceProperty = exports.ScryptedInterfaceProperty || (exports.ScryptedInterfaceProperty = {}));\nvar ScryptedInterfaceMethod;\n(function (ScryptedInterfaceMethod) {\n    ScryptedInterfaceMethod[\"listen\"] = \"listen\";\n    ScryptedInterfaceMethod[\"probe\"] = \"probe\";\n    ScryptedInterfaceMethod[\"setMixins\"] = \"setMixins\";\n    ScryptedInterfaceMethod[\"setName\"] = \"setName\";\n    ScryptedInterfaceMethod[\"setRoom\"] = \"setRoom\";\n    ScryptedInterfaceMethod[\"setType\"] = \"setType\";\n    ScryptedInterfaceMethod[\"getPluginJson\"] = \"getPluginJson\";\n    ScryptedInterfaceMethod[\"turnOff\"] = \"turnOff\";\n    ScryptedInterfaceMethod[\"turnOn\"] = \"turnOn\";\n    ScryptedInterfaceMethod[\"setBrightness\"] = \"setBrightness\";\n    ScryptedInterfaceMethod[\"getTemperatureMaxK\"] = \"getTemperatureMaxK\";\n    ScryptedInterfaceMethod[\"getTemperatureMinK\"] = \"getTemperatureMinK\";\n    ScryptedInterfaceMethod[\"setColorTemperature\"] = \"setColorTemperature\";\n    ScryptedInterfaceMethod[\"setRgb\"] = \"setRgb\";\n    ScryptedInterfaceMethod[\"setHsv\"] = \"setHsv\";\n    ScryptedInterfaceMethod[\"sendNotification\"] = \"sendNotification\";\n    ScryptedInterfaceMethod[\"start\"] = \"start\";\n    ScryptedInterfaceMethod[\"stop\"] = \"stop\";\n    ScryptedInterfaceMethod[\"pause\"] = \"pause\";\n    ScryptedInterfaceMethod[\"resume\"] = \"resume\";\n    ScryptedInterfaceMethod[\"dock\"] = \"dock\";\n    ScryptedInterfaceMethod[\"setTemperature\"] = \"setTemperature\";\n    ScryptedInterfaceMethod[\"setThermostatMode\"] = \"setThermostatMode\";\n    ScryptedInterfaceMethod[\"setThermostatSetpoint\"] = \"setThermostatSetpoint\";\n    ScryptedInterfaceMethod[\"setThermostatSetpointHigh\"] = \"setThermostatSetpointHigh\";\n    ScryptedInterfaceMethod[\"setThermostatSetpointLow\"] = \"setThermostatSetpointLow\";\n    ScryptedInterfaceMethod[\"setTemperatureUnit\"] = \"setTemperatureUnit\";\n    ScryptedInterfaceMethod[\"getPictureOptions\"] = \"getPictureOptions\";\n    ScryptedInterfaceMethod[\"takePicture\"] = \"takePicture\";\n    ScryptedInterfaceMethod[\"getAudioStream\"] = \"getAudioStream\";\n    ScryptedInterfaceMethod[\"startDisplay\"] = \"startDisplay\";\n    ScryptedInterfaceMethod[\"stopDisplay\"] = \"stopDisplay\";\n    ScryptedInterfaceMethod[\"getVideoStream\"] = \"getVideoStream\";\n    ScryptedInterfaceMethod[\"getVideoStreamOptions\"] = \"getVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"getRecordingStream\"] = \"getRecordingStream\";\n    ScryptedInterfaceMethod[\"getRecordingStreamCurrentTime\"] = \"getRecordingStreamCurrentTime\";\n    ScryptedInterfaceMethod[\"getRecordingStreamOptions\"] = \"getRecordingStreamOptions\";\n    ScryptedInterfaceMethod[\"getRecordingStreamThumbnail\"] = \"getRecordingStreamThumbnail\";\n    ScryptedInterfaceMethod[\"deleteRecordingStream\"] = \"deleteRecordingStream\";\n    ScryptedInterfaceMethod[\"setRecordingActive\"] = \"setRecordingActive\";\n    ScryptedInterfaceMethod[\"ptzCommand\"] = \"ptzCommand\";\n    ScryptedInterfaceMethod[\"getRecordedEvents\"] = \"getRecordedEvents\";\n    ScryptedInterfaceMethod[\"getVideoClip\"] = \"getVideoClip\";\n    ScryptedInterfaceMethod[\"getVideoClipThumbnail\"] = \"getVideoClipThumbnail\";\n    ScryptedInterfaceMethod[\"getVideoClips\"] = \"getVideoClips\";\n    ScryptedInterfaceMethod[\"removeVideoClips\"] = \"removeVideoClips\";\n    ScryptedInterfaceMethod[\"setVideoStreamOptions\"] = \"setVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"startIntercom\"] = \"startIntercom\";\n    ScryptedInterfaceMethod[\"stopIntercom\"] = \"stopIntercom\";\n    ScryptedInterfaceMethod[\"lock\"] = \"lock\";\n    ScryptedInterfaceMethod[\"unlock\"] = \"unlock\";\n    ScryptedInterfaceMethod[\"addPassword\"] = \"addPassword\";\n    ScryptedInterfaceMethod[\"getPasswords\"] = \"getPasswords\";\n    ScryptedInterfaceMethod[\"removePassword\"] = \"removePassword\";\n    ScryptedInterfaceMethod[\"activate\"] = \"activate\";\n    ScryptedInterfaceMethod[\"deactivate\"] = \"deactivate\";\n    ScryptedInterfaceMethod[\"isReversible\"] = \"isReversible\";\n    ScryptedInterfaceMethod[\"closeEntry\"] = \"closeEntry\";\n    ScryptedInterfaceMethod[\"openEntry\"] = \"openEntry\";\n    ScryptedInterfaceMethod[\"getDevice\"] = \"getDevice\";\n    ScryptedInterfaceMethod[\"releaseDevice\"] = \"releaseDevice\";\n    ScryptedInterfaceMethod[\"adoptDevice\"] = \"adoptDevice\";\n    ScryptedInterfaceMethod[\"discoverDevices\"] = \"discoverDevices\";\n    ScryptedInterfaceMethod[\"createDevice\"] = \"createDevice\";\n    ScryptedInterfaceMethod[\"getCreateDeviceSettings\"] = \"getCreateDeviceSettings\";\n    ScryptedInterfaceMethod[\"reboot\"] = \"reboot\";\n    ScryptedInterfaceMethod[\"getRefreshFrequency\"] = \"getRefreshFrequency\";\n    ScryptedInterfaceMethod[\"refresh\"] = \"refresh\";\n    ScryptedInterfaceMethod[\"getMediaStatus\"] = \"getMediaStatus\";\n    ScryptedInterfaceMethod[\"load\"] = \"load\";\n    ScryptedInterfaceMethod[\"seek\"] = \"seek\";\n    ScryptedInterfaceMethod[\"skipNext\"] = \"skipNext\";\n    ScryptedInterfaceMethod[\"skipPrevious\"] = \"skipPrevious\";\n    ScryptedInterfaceMethod[\"convert\"] = \"convert\";\n    ScryptedInterfaceMethod[\"getSettings\"] = \"getSettings\";\n    ScryptedInterfaceMethod[\"putSetting\"] = \"putSetting\";\n    ScryptedInterfaceMethod[\"armSecuritySystem\"] = \"armSecuritySystem\";\n    ScryptedInterfaceMethod[\"disarmSecuritySystem\"] = \"disarmSecuritySystem\";\n    ScryptedInterfaceMethod[\"setAirPurifierState\"] = \"setAirPurifierState\";\n    ScryptedInterfaceMethod[\"getReadmeMarkdown\"] = \"getReadmeMarkdown\";\n    ScryptedInterfaceMethod[\"getOauthUrl\"] = \"getOauthUrl\";\n    ScryptedInterfaceMethod[\"onOauthCallback\"] = \"onOauthCallback\";\n    ScryptedInterfaceMethod[\"canMixin\"] = \"canMixin\";\n    ScryptedInterfaceMethod[\"getMixin\"] = \"getMixin\";\n    ScryptedInterfaceMethod[\"releaseMixin\"] = \"releaseMixin\";\n    ScryptedInterfaceMethod[\"onRequest\"] = \"onRequest\";\n    ScryptedInterfaceMethod[\"onConnection\"] = \"onConnection\";\n    ScryptedInterfaceMethod[\"onPush\"] = \"onPush\";\n    ScryptedInterfaceMethod[\"run\"] = \"run\";\n    ScryptedInterfaceMethod[\"eval\"] = \"eval\";\n    ScryptedInterfaceMethod[\"loadScripts\"] = \"loadScripts\";\n    ScryptedInterfaceMethod[\"saveScript\"] = \"saveScript\";\n    ScryptedInterfaceMethod[\"trackObjects\"] = \"trackObjects\";\n    ScryptedInterfaceMethod[\"getDetectionInput\"] = \"getDetectionInput\";\n    ScryptedInterfaceMethod[\"getObjectTypes\"] = \"getObjectTypes\";\n    ScryptedInterfaceMethod[\"detectObjects\"] = \"detectObjects\";\n    ScryptedInterfaceMethod[\"generateObjectDetections\"] = \"generateObjectDetections\";\n    ScryptedInterfaceMethod[\"getDetectionModel\"] = \"getDetectionModel\";\n    ScryptedInterfaceMethod[\"setHumidity\"] = \"setHumidity\";\n    ScryptedInterfaceMethod[\"setFan\"] = \"setFan\";\n    ScryptedInterfaceMethod[\"startRTCSignalingSession\"] = \"startRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"createRTCSignalingSession\"] = \"createRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"getScryptedUserAccessControl\"] = \"getScryptedUserAccessControl\";\n    ScryptedInterfaceMethod[\"generateVideoFrames\"] = \"generateVideoFrames\";\n    ScryptedInterfaceMethod[\"connectStream\"] = \"connectStream\";\n})(ScryptedInterfaceMethod = exports.ScryptedInterfaceMethod || (exports.ScryptedInterfaceMethod = {}));\nexports.ScryptedInterfaceDescriptors = {\n    ScryptedDevice: {\n        name: 'ScryptedDevice',\n        methods: [\n            'listen',\n            'probe',\n            'setMixins',\n            'setName',\n            'setRoom',\n            'setType'\n        ],\n        properties: [\n            'id',\n            'info',\n            'interfaces',\n            'mixins',\n            'name',\n            'nativeId',\n            'pluginId',\n            'providedInterfaces',\n            'providedName',\n            'providedRoom',\n            'providedType',\n            'providerId',\n            'room',\n            'type'\n        ]\n    },\n    ScryptedPlugin: {\n        name: 'ScryptedPlugin',\n        methods: [\n            'getPluginJson'\n        ],\n        properties: []\n    },\n    OnOff: {\n        name: 'OnOff',\n        methods: [\n            'turnOff',\n            'turnOn'\n        ],\n        properties: [\n            'on'\n        ]\n    },\n    Brightness: {\n        name: 'Brightness',\n        methods: [\n            'setBrightness'\n        ],\n        properties: [\n            'brightness'\n        ]\n    },\n    ColorSettingTemperature: {\n        name: 'ColorSettingTemperature',\n        methods: [\n            'getTemperatureMaxK',\n            'getTemperatureMinK',\n            'setColorTemperature'\n        ],\n        properties: [\n            'colorTemperature'\n        ]\n    },\n    ColorSettingRgb: {\n        name: 'ColorSettingRgb',\n        methods: [\n            'setRgb'\n        ],\n        properties: [\n            'rgb'\n        ]\n    },\n    ColorSettingHsv: {\n        name: 'ColorSettingHsv',\n        methods: [\n            'setHsv'\n        ],\n        properties: [\n            'hsv'\n        ]\n    },\n    Notifier: {\n        name: 'Notifier',\n        methods: [\n            'sendNotification'\n        ],\n        properties: []\n    },\n    StartStop: {\n        name: 'StartStop',\n        methods: [\n            'start',\n            'stop'\n        ],\n        properties: [\n            'running'\n        ]\n    },\n    Pause: {\n        name: 'Pause',\n        methods: [\n            'pause',\n            'resume'\n        ],\n        properties: [\n            'paused'\n        ]\n    },\n    Dock: {\n        name: 'Dock',\n        methods: [\n            'dock'\n        ],\n        properties: [\n            'docked'\n        ]\n    },\n    TemperatureSetting: {\n        name: 'TemperatureSetting',\n        methods: [\n            'setTemperature',\n            'setThermostatMode',\n            'setThermostatSetpoint',\n            'setThermostatSetpointHigh',\n            'setThermostatSetpointLow'\n        ],\n        properties: [\n            'temperatureSetting',\n            'thermostatActiveMode',\n            'thermostatAvailableModes',\n            'thermostatMode',\n            'thermostatSetpoint',\n            'thermostatSetpointHigh',\n            'thermostatSetpointLow'\n        ]\n    },\n    Thermometer: {\n        name: 'Thermometer',\n        methods: [\n            'setTemperatureUnit'\n        ],\n        properties: [\n            'temperature',\n            'temperatureUnit'\n        ]\n    },\n    HumiditySensor: {\n        name: 'HumiditySensor',\n        methods: [],\n        properties: [\n            'humidity'\n        ]\n    },\n    Camera: {\n        name: 'Camera',\n        methods: [\n            'getPictureOptions',\n            'takePicture'\n        ],\n        properties: []\n    },\n    Microphone: {\n        name: 'Microphone',\n        methods: [\n            'getAudioStream'\n        ],\n        properties: []\n    },\n    Display: {\n        name: 'Display',\n        methods: [\n            'startDisplay',\n            'stopDisplay'\n        ],\n        properties: []\n    },\n    VideoCamera: {\n        name: 'VideoCamera',\n        methods: [\n            'getVideoStream',\n            'getVideoStreamOptions'\n        ],\n        properties: []\n    },\n    VideoRecorder: {\n        name: 'VideoRecorder',\n        methods: [\n            'getRecordingStream',\n            'getRecordingStreamCurrentTime',\n            'getRecordingStreamOptions',\n            'getRecordingStreamThumbnail'\n        ],\n        properties: [\n            'recordingActive'\n        ]\n    },\n    VideoRecorderManagement: {\n        name: 'VideoRecorderManagement',\n        methods: [\n            'deleteRecordingStream',\n            'setRecordingActive'\n        ],\n        properties: []\n    },\n    PanTiltZoom: {\n        name: 'PanTiltZoom',\n        methods: [\n            'ptzCommand'\n        ],\n        properties: [\n            'ptzCapabilities'\n        ]\n    },\n    EventRecorder: {\n        name: 'EventRecorder',\n        methods: [\n            'getRecordedEvents'\n        ],\n        properties: []\n    },\n    VideoClips: {\n        name: 'VideoClips',\n        methods: [\n            'getVideoClip',\n            'getVideoClipThumbnail',\n            'getVideoClips',\n            'removeVideoClips'\n        ],\n        properties: []\n    },\n    VideoCameraConfiguration: {\n        name: 'VideoCameraConfiguration',\n        methods: [\n            'setVideoStreamOptions'\n        ],\n        properties: []\n    },\n    Intercom: {\n        name: 'Intercom',\n        methods: [\n            'startIntercom',\n            'stopIntercom'\n        ],\n        properties: []\n    },\n    Lock: {\n        name: 'Lock',\n        methods: [\n            'lock',\n            'unlock'\n        ],\n        properties: [\n            'lockState'\n        ]\n    },\n    PasswordStore: {\n        name: 'PasswordStore',\n        methods: [\n            'addPassword',\n            'getPasswords',\n            'removePassword'\n        ],\n        properties: []\n    },\n    Scene: {\n        name: 'Scene',\n        methods: [\n            'activate',\n            'deactivate',\n            'isReversible'\n        ],\n        properties: []\n    },\n    Entry: {\n        name: 'Entry',\n        methods: [\n            'closeEntry',\n            'openEntry'\n        ],\n        properties: []\n    },\n    EntrySensor: {\n        name: 'EntrySensor',\n        methods: [],\n        properties: [\n            'entryOpen'\n        ]\n    },\n    DeviceProvider: {\n        name: 'DeviceProvider',\n        methods: [\n            'getDevice',\n            'releaseDevice'\n        ],\n        properties: []\n    },\n    DeviceDiscovery: {\n        name: 'DeviceDiscovery',\n        methods: [\n            'adoptDevice',\n            'discoverDevices'\n        ],\n        properties: []\n    },\n    DeviceCreator: {\n        name: 'DeviceCreator',\n        methods: [\n            'createDevice',\n            'getCreateDeviceSettings'\n        ],\n        properties: []\n    },\n    Battery: {\n        name: 'Battery',\n        methods: [],\n        properties: [\n            'batteryLevel'\n        ]\n    },\n    Charger: {\n        name: 'Charger',\n        methods: [],\n        properties: [\n            'chargeState'\n        ]\n    },\n    Reboot: {\n        name: 'Reboot',\n        methods: [\n            'reboot'\n        ],\n        properties: []\n    },\n    Refresh: {\n        name: 'Refresh',\n        methods: [\n            'getRefreshFrequency',\n            'refresh'\n        ],\n        properties: []\n    },\n    MediaPlayer: {\n        name: 'MediaPlayer',\n        methods: [\n            'getMediaStatus',\n            'load',\n            'seek',\n            'skipNext',\n            'skipPrevious'\n        ],\n        properties: []\n    },\n    Online: {\n        name: 'Online',\n        methods: [],\n        properties: [\n            'online'\n        ]\n    },\n    BufferConverter: {\n        name: 'BufferConverter',\n        methods: [\n            'convert'\n        ],\n        properties: [\n            'fromMimeType',\n            'toMimeType'\n        ]\n    },\n    Settings: {\n        name: 'Settings',\n        methods: [\n            'getSettings',\n            'putSetting'\n        ],\n        properties: []\n    },\n    BinarySensor: {\n        name: 'BinarySensor',\n        methods: [],\n        properties: [\n            'binaryState'\n        ]\n    },\n    TamperSensor: {\n        name: 'TamperSensor',\n        methods: [],\n        properties: [\n            'tampered'\n        ]\n    },\n    PowerSensor: {\n        name: 'PowerSensor',\n        methods: [],\n        properties: [\n            'powerDetected'\n        ]\n    },\n    AudioSensor: {\n        name: 'AudioSensor',\n        methods: [],\n        properties: [\n            'audioDetected'\n        ]\n    },\n    MotionSensor: {\n        name: 'MotionSensor',\n        methods: [],\n        properties: [\n            'motionDetected'\n        ]\n    },\n    AmbientLightSensor: {\n        name: 'AmbientLightSensor',\n        methods: [],\n        properties: [\n            'ambientLight'\n        ]\n    },\n    OccupancySensor: {\n        name: 'OccupancySensor',\n        methods: [],\n        properties: [\n            'occupied'\n        ]\n    },\n    FloodSensor: {\n        name: 'FloodSensor',\n        methods: [],\n        properties: [\n            'flooded'\n        ]\n    },\n    UltravioletSensor: {\n        name: 'UltravioletSensor',\n        methods: [],\n        properties: [\n            'ultraviolet'\n        ]\n    },\n    LuminanceSensor: {\n        name: 'LuminanceSensor',\n        methods: [],\n        properties: [\n            'luminance'\n        ]\n    },\n    PositionSensor: {\n        name: 'PositionSensor',\n        methods: [],\n        properties: [\n            'position'\n        ]\n    },\n    SecuritySystem: {\n        name: 'SecuritySystem',\n        methods: [\n            'armSecuritySystem',\n            'disarmSecuritySystem'\n        ],\n        properties: [\n            'securitySystemState'\n        ]\n    },\n    PM10Sensor: {\n        name: 'PM10Sensor',\n        methods: [],\n        properties: [\n            'pm10Density'\n        ]\n    },\n    PM25Sensor: {\n        name: 'PM25Sensor',\n        methods: [],\n        properties: [\n            'pm25Density'\n        ]\n    },\n    VOCSensor: {\n        name: 'VOCSensor',\n        methods: [],\n        properties: [\n            'vocDensity'\n        ]\n    },\n    NOXSensor: {\n        name: 'NOXSensor',\n        methods: [],\n        properties: [\n            'noxDensity'\n        ]\n    },\n    CO2Sensor: {\n        name: 'CO2Sensor',\n        methods: [],\n        properties: [\n            'co2ppm'\n        ]\n    },\n    AirQualitySensor: {\n        name: 'AirQualitySensor',\n        methods: [],\n        properties: [\n            'airQuality'\n        ]\n    },\n    AirPurifier: {\n        name: 'AirPurifier',\n        methods: [\n            'setAirPurifierState'\n        ],\n        properties: [\n            'airPurifierState'\n        ]\n    },\n    FilterMaintenance: {\n        name: 'FilterMaintenance',\n        methods: [],\n        properties: [\n            'filterChangeIndication',\n            'filterLifeLevel'\n        ]\n    },\n    Readme: {\n        name: 'Readme',\n        methods: [\n            'getReadmeMarkdown'\n        ],\n        properties: []\n    },\n    OauthClient: {\n        name: 'OauthClient',\n        methods: [\n            'getOauthUrl',\n            'onOauthCallback'\n        ],\n        properties: []\n    },\n    MixinProvider: {\n        name: 'MixinProvider',\n        methods: [\n            'canMixin',\n            'getMixin',\n            'releaseMixin'\n        ],\n        properties: []\n    },\n    HttpRequestHandler: {\n        name: 'HttpRequestHandler',\n        methods: [\n            'onRequest'\n        ],\n        properties: []\n    },\n    EngineIOHandler: {\n        name: 'EngineIOHandler',\n        methods: [\n            'onConnection'\n        ],\n        properties: []\n    },\n    PushHandler: {\n        name: 'PushHandler',\n        methods: [\n            'onPush'\n        ],\n        properties: []\n    },\n    Program: {\n        name: 'Program',\n        methods: [\n            'run'\n        ],\n        properties: []\n    },\n    Scriptable: {\n        name: 'Scriptable',\n        methods: [\n            'eval',\n            'loadScripts',\n            'saveScript'\n        ],\n        properties: []\n    },\n    ObjectTracker: {\n        name: 'ObjectTracker',\n        methods: [\n            'trackObjects'\n        ],\n        properties: []\n    },\n    ObjectDetector: {\n        name: 'ObjectDetector',\n        methods: [\n            'getDetectionInput',\n            'getObjectTypes'\n        ],\n        properties: []\n    },\n    ObjectDetection: {\n        name: 'ObjectDetection',\n        methods: [\n            'detectObjects',\n            'generateObjectDetections',\n            'getDetectionModel'\n        ],\n        properties: []\n    },\n    ObjectDetectionPreview: {\n        name: 'ObjectDetectionPreview',\n        methods: [],\n        properties: []\n    },\n    ObjectDetectionGenerator: {\n        name: 'ObjectDetectionGenerator',\n        methods: [],\n        properties: []\n    },\n    HumiditySetting: {\n        name: 'HumiditySetting',\n        methods: [\n            'setHumidity'\n        ],\n        properties: [\n            'humiditySetting'\n        ]\n    },\n    Fan: {\n        name: 'Fan',\n        methods: [\n            'setFan'\n        ],\n        properties: [\n            'fan'\n        ]\n    },\n    RTCSignalingChannel: {\n        name: 'RTCSignalingChannel',\n        methods: [\n            'startRTCSignalingSession'\n        ],\n        properties: []\n    },\n    RTCSignalingClient: {\n        name: 'RTCSignalingClient',\n        methods: [\n            'createRTCSignalingSession'\n        ],\n        properties: []\n    },\n    LauncherApplication: {\n        name: 'LauncherApplication',\n        methods: [],\n        properties: [\n            'applicationInfo'\n        ]\n    },\n    ScryptedUser: {\n        name: 'ScryptedUser',\n        methods: [\n            'getScryptedUserAccessControl'\n        ],\n        properties: []\n    },\n    VideoFrameGenerator: {\n        name: 'VideoFrameGenerator',\n        methods: [\n            'generateVideoFrames'\n        ],\n        properties: []\n    },\n    StreamService: {\n        name: 'StreamService',\n        methods: [\n            'connectStream'\n        ],\n        properties: []\n    }\n};\n/**\n * @category Core Reference\n */\nvar ScryptedDeviceType;\n(function (ScryptedDeviceType) {\n    ScryptedDeviceType[\"Builtin\"] = \"Builtin\";\n    ScryptedDeviceType[\"Camera\"] = \"Camera\";\n    ScryptedDeviceType[\"Fan\"] = \"Fan\";\n    ScryptedDeviceType[\"Light\"] = \"Light\";\n    ScryptedDeviceType[\"Switch\"] = \"Switch\";\n    ScryptedDeviceType[\"Outlet\"] = \"Outlet\";\n    ScryptedDeviceType[\"Sensor\"] = \"Sensor\";\n    ScryptedDeviceType[\"Scene\"] = \"Scene\";\n    ScryptedDeviceType[\"Program\"] = \"Program\";\n    ScryptedDeviceType[\"Automation\"] = \"Automation\";\n    ScryptedDeviceType[\"Vacuum\"] = \"Vacuum\";\n    ScryptedDeviceType[\"Notifier\"] = \"Notifier\";\n    ScryptedDeviceType[\"Thermostat\"] = \"Thermostat\";\n    ScryptedDeviceType[\"Lock\"] = \"Lock\";\n    ScryptedDeviceType[\"PasswordControl\"] = \"PasswordControl\";\n    /**\n     * Displays have audio and video output.\n     */\n    ScryptedDeviceType[\"Display\"] = \"Display\";\n    /**\n     * Smart Displays have two way audio and video.\n     */\n    ScryptedDeviceType[\"SmartDisplay\"] = \"SmartDisplay\";\n    ScryptedDeviceType[\"Speaker\"] = \"Speaker\";\n    /**\n     * Smart Speakers have two way audio.\n     */\n    ScryptedDeviceType[\"SmartSpeaker\"] = \"SmartSpeaker\";\n    ScryptedDeviceType[\"Event\"] = \"Event\";\n    ScryptedDeviceType[\"Entry\"] = \"Entry\";\n    ScryptedDeviceType[\"Garage\"] = \"Garage\";\n    ScryptedDeviceType[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedDeviceType[\"DataSource\"] = \"DataSource\";\n    ScryptedDeviceType[\"API\"] = \"API\";\n    ScryptedDeviceType[\"Doorbell\"] = \"Doorbell\";\n    ScryptedDeviceType[\"Irrigation\"] = \"Irrigation\";\n    ScryptedDeviceType[\"Valve\"] = \"Valve\";\n    ScryptedDeviceType[\"Person\"] = \"Person\";\n    ScryptedDeviceType[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedDeviceType[\"WindowCovering\"] = \"WindowCovering\";\n    ScryptedDeviceType[\"Siren\"] = \"Siren\";\n    ScryptedDeviceType[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedDeviceType[\"Unknown\"] = \"Unknown\";\n})(ScryptedDeviceType = exports.ScryptedDeviceType || (exports.ScryptedDeviceType = {}));\nvar HumidityMode;\n(function (HumidityMode) {\n    HumidityMode[\"Humidify\"] = \"Humidify\";\n    HumidityMode[\"Dehumidify\"] = \"Dehumidify\";\n    HumidityMode[\"Auto\"] = \"Auto\";\n    HumidityMode[\"Off\"] = \"Off\";\n})(HumidityMode = exports.HumidityMode || (exports.HumidityMode = {}));\nvar FanMode;\n(function (FanMode) {\n    FanMode[\"Auto\"] = \"Auto\";\n    FanMode[\"Manual\"] = \"Manual\";\n})(FanMode = exports.FanMode || (exports.FanMode = {}));\nvar TemperatureUnit;\n(function (TemperatureUnit) {\n    TemperatureUnit[\"C\"] = \"C\";\n    TemperatureUnit[\"F\"] = \"F\";\n})(TemperatureUnit = exports.TemperatureUnit || (exports.TemperatureUnit = {}));\nvar ThermostatMode;\n(function (ThermostatMode) {\n    ThermostatMode[\"Off\"] = \"Off\";\n    ThermostatMode[\"Cool\"] = \"Cool\";\n    ThermostatMode[\"Heat\"] = \"Heat\";\n    ThermostatMode[\"HeatCool\"] = \"HeatCool\";\n    ThermostatMode[\"Auto\"] = \"Auto\";\n    ThermostatMode[\"FanOnly\"] = \"FanOnly\";\n    ThermostatMode[\"Purifier\"] = \"Purifier\";\n    ThermostatMode[\"Eco\"] = \"Eco\";\n    ThermostatMode[\"Dry\"] = \"Dry\";\n    ThermostatMode[\"On\"] = \"On\";\n})(ThermostatMode = exports.ThermostatMode || (exports.ThermostatMode = {}));\nvar PanTiltZoomMovement;\n(function (PanTiltZoomMovement) {\n    PanTiltZoomMovement[\"Absolute\"] = \"Absolute\";\n    PanTiltZoomMovement[\"Relative\"] = \"Relative\";\n})(PanTiltZoomMovement = exports.PanTiltZoomMovement || (exports.PanTiltZoomMovement = {}));\nvar LockState;\n(function (LockState) {\n    LockState[\"Locked\"] = \"Locked\";\n    LockState[\"Unlocked\"] = \"Unlocked\";\n    LockState[\"Jammed\"] = \"Jammed\";\n})(LockState = exports.LockState || (exports.LockState = {}));\nvar ChargeState;\n(function (ChargeState) {\n    ChargeState[\"Trickle\"] = \"trickle\";\n    ChargeState[\"Charging\"] = \"charging\";\n    ChargeState[\"NotCharging\"] = \"not-charging\";\n})(ChargeState = exports.ChargeState || (exports.ChargeState = {}));\nvar AirPurifierStatus;\n(function (AirPurifierStatus) {\n    AirPurifierStatus[\"Inactive\"] = \"Inactive\";\n    AirPurifierStatus[\"Idle\"] = \"Idle\";\n    AirPurifierStatus[\"Active\"] = \"Active\";\n    AirPurifierStatus[\"ActiveNightMode\"] = \"ActiveNightMode\";\n})(AirPurifierStatus = exports.AirPurifierStatus || (exports.AirPurifierStatus = {}));\nvar AirPurifierMode;\n(function (AirPurifierMode) {\n    AirPurifierMode[\"Manual\"] = \"Manual\";\n    AirPurifierMode[\"Automatic\"] = \"Automatic\";\n})(AirPurifierMode = exports.AirPurifierMode || (exports.AirPurifierMode = {}));\nvar AirQuality;\n(function (AirQuality) {\n    AirQuality[\"Unknown\"] = \"Unknown\";\n    AirQuality[\"Excellent\"] = \"Excellent\";\n    AirQuality[\"Good\"] = \"Good\";\n    AirQuality[\"Fair\"] = \"Fair\";\n    AirQuality[\"Inferior\"] = \"Inferior\";\n    AirQuality[\"Poor\"] = \"Poor\";\n})(AirQuality = exports.AirQuality || (exports.AirQuality = {}));\nvar SecuritySystemMode;\n(function (SecuritySystemMode) {\n    SecuritySystemMode[\"Disarmed\"] = \"Disarmed\";\n    SecuritySystemMode[\"HomeArmed\"] = \"HomeArmed\";\n    SecuritySystemMode[\"AwayArmed\"] = \"AwayArmed\";\n    SecuritySystemMode[\"NightArmed\"] = \"NightArmed\";\n})(SecuritySystemMode = exports.SecuritySystemMode || (exports.SecuritySystemMode = {}));\nvar SecuritySystemObstruction;\n(function (SecuritySystemObstruction) {\n    SecuritySystemObstruction[\"Sensor\"] = \"Sensor\";\n    SecuritySystemObstruction[\"Occupied\"] = \"Occupied\";\n    SecuritySystemObstruction[\"Time\"] = \"Time\";\n    SecuritySystemObstruction[\"Error\"] = \"Error\";\n})(SecuritySystemObstruction = exports.SecuritySystemObstruction || (exports.SecuritySystemObstruction = {}));\nvar MediaPlayerState;\n(function (MediaPlayerState) {\n    MediaPlayerState[\"Idle\"] = \"Idle\";\n    MediaPlayerState[\"Playing\"] = \"Playing\";\n    MediaPlayerState[\"Paused\"] = \"Paused\";\n    MediaPlayerState[\"Buffering\"] = \"Buffering\";\n})(MediaPlayerState = exports.MediaPlayerState || (exports.MediaPlayerState = {}));\nvar ScryptedInterface;\n(function (ScryptedInterface) {\n    ScryptedInterface[\"ScryptedDevice\"] = \"ScryptedDevice\";\n    ScryptedInterface[\"ScryptedPlugin\"] = \"ScryptedPlugin\";\n    ScryptedInterface[\"OnOff\"] = \"OnOff\";\n    ScryptedInterface[\"Brightness\"] = \"Brightness\";\n    ScryptedInterface[\"ColorSettingTemperature\"] = \"ColorSettingTemperature\";\n    ScryptedInterface[\"ColorSettingRgb\"] = \"ColorSettingRgb\";\n    ScryptedInterface[\"ColorSettingHsv\"] = \"ColorSettingHsv\";\n    ScryptedInterface[\"Notifier\"] = \"Notifier\";\n    ScryptedInterface[\"StartStop\"] = \"StartStop\";\n    ScryptedInterface[\"Pause\"] = \"Pause\";\n    ScryptedInterface[\"Dock\"] = \"Dock\";\n    ScryptedInterface[\"TemperatureSetting\"] = \"TemperatureSetting\";\n    ScryptedInterface[\"Thermometer\"] = \"Thermometer\";\n    ScryptedInterface[\"HumiditySensor\"] = \"HumiditySensor\";\n    ScryptedInterface[\"Camera\"] = \"Camera\";\n    ScryptedInterface[\"Microphone\"] = \"Microphone\";\n    ScryptedInterface[\"Display\"] = \"Display\";\n    ScryptedInterface[\"VideoCamera\"] = \"VideoCamera\";\n    ScryptedInterface[\"VideoRecorder\"] = \"VideoRecorder\";\n    ScryptedInterface[\"VideoRecorderManagement\"] = \"VideoRecorderManagement\";\n    ScryptedInterface[\"PanTiltZoom\"] = \"PanTiltZoom\";\n    ScryptedInterface[\"EventRecorder\"] = \"EventRecorder\";\n    ScryptedInterface[\"VideoClips\"] = \"VideoClips\";\n    ScryptedInterface[\"VideoCameraConfiguration\"] = \"VideoCameraConfiguration\";\n    ScryptedInterface[\"Intercom\"] = \"Intercom\";\n    ScryptedInterface[\"Lock\"] = \"Lock\";\n    ScryptedInterface[\"PasswordStore\"] = \"PasswordStore\";\n    ScryptedInterface[\"Scene\"] = \"Scene\";\n    ScryptedInterface[\"Entry\"] = \"Entry\";\n    ScryptedInterface[\"EntrySensor\"] = \"EntrySensor\";\n    ScryptedInterface[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedInterface[\"DeviceDiscovery\"] = \"DeviceDiscovery\";\n    ScryptedInterface[\"DeviceCreator\"] = \"DeviceCreator\";\n    ScryptedInterface[\"Battery\"] = \"Battery\";\n    ScryptedInterface[\"Charger\"] = \"Charger\";\n    ScryptedInterface[\"Reboot\"] = \"Reboot\";\n    ScryptedInterface[\"Refresh\"] = \"Refresh\";\n    ScryptedInterface[\"MediaPlayer\"] = \"MediaPlayer\";\n    ScryptedInterface[\"Online\"] = \"Online\";\n    ScryptedInterface[\"BufferConverter\"] = \"BufferConverter\";\n    ScryptedInterface[\"Settings\"] = \"Settings\";\n    ScryptedInterface[\"BinarySensor\"] = \"BinarySensor\";\n    ScryptedInterface[\"TamperSensor\"] = \"TamperSensor\";\n    ScryptedInterface[\"PowerSensor\"] = \"PowerSensor\";\n    ScryptedInterface[\"AudioSensor\"] = \"AudioSensor\";\n    ScryptedInterface[\"MotionSensor\"] = \"MotionSensor\";\n    ScryptedInterface[\"AmbientLightSensor\"] = \"AmbientLightSensor\";\n    ScryptedInterface[\"OccupancySensor\"] = \"OccupancySensor\";\n    ScryptedInterface[\"FloodSensor\"] = \"FloodSensor\";\n    ScryptedInterface[\"UltravioletSensor\"] = \"UltravioletSensor\";\n    ScryptedInterface[\"LuminanceSensor\"] = \"LuminanceSensor\";\n    ScryptedInterface[\"PositionSensor\"] = \"PositionSensor\";\n    ScryptedInterface[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedInterface[\"PM10Sensor\"] = \"PM10Sensor\";\n    ScryptedInterface[\"PM25Sensor\"] = \"PM25Sensor\";\n    ScryptedInterface[\"VOCSensor\"] = \"VOCSensor\";\n    ScryptedInterface[\"NOXSensor\"] = \"NOXSensor\";\n    ScryptedInterface[\"CO2Sensor\"] = \"CO2Sensor\";\n    ScryptedInterface[\"AirQualitySensor\"] = \"AirQualitySensor\";\n    ScryptedInterface[\"AirPurifier\"] = \"AirPurifier\";\n    ScryptedInterface[\"FilterMaintenance\"] = \"FilterMaintenance\";\n    ScryptedInterface[\"Readme\"] = \"Readme\";\n    ScryptedInterface[\"OauthClient\"] = \"OauthClient\";\n    ScryptedInterface[\"MixinProvider\"] = \"MixinProvider\";\n    ScryptedInterface[\"HttpRequestHandler\"] = \"HttpRequestHandler\";\n    ScryptedInterface[\"EngineIOHandler\"] = \"EngineIOHandler\";\n    ScryptedInterface[\"PushHandler\"] = \"PushHandler\";\n    ScryptedInterface[\"Program\"] = \"Program\";\n    ScryptedInterface[\"Scriptable\"] = \"Scriptable\";\n    ScryptedInterface[\"ObjectTracker\"] = \"ObjectTracker\";\n    ScryptedInterface[\"ObjectDetector\"] = \"ObjectDetector\";\n    ScryptedInterface[\"ObjectDetection\"] = \"ObjectDetection\";\n    ScryptedInterface[\"ObjectDetectionPreview\"] = \"ObjectDetectionPreview\";\n    ScryptedInterface[\"ObjectDetectionGenerator\"] = \"ObjectDetectionGenerator\";\n    ScryptedInterface[\"HumiditySetting\"] = \"HumiditySetting\";\n    ScryptedInterface[\"Fan\"] = \"Fan\";\n    ScryptedInterface[\"RTCSignalingChannel\"] = \"RTCSignalingChannel\";\n    ScryptedInterface[\"RTCSignalingClient\"] = \"RTCSignalingClient\";\n    ScryptedInterface[\"LauncherApplication\"] = \"LauncherApplication\";\n    ScryptedInterface[\"ScryptedUser\"] = \"ScryptedUser\";\n    ScryptedInterface[\"VideoFrameGenerator\"] = \"VideoFrameGenerator\";\n    ScryptedInterface[\"StreamService\"] = \"StreamService\";\n})(ScryptedInterface = exports.ScryptedInterface || (exports.ScryptedInterface = {}));\nvar ScryptedMimeTypes;\n(function (ScryptedMimeTypes) {\n    ScryptedMimeTypes[\"Url\"] = \"text/x-uri\";\n    ScryptedMimeTypes[\"InsecureLocalUrl\"] = \"text/x-insecure-local-uri\";\n    ScryptedMimeTypes[\"LocalUrl\"] = \"text/x-local-uri\";\n    ScryptedMimeTypes[\"PushEndpoint\"] = \"text/x-push-endpoint\";\n    ScryptedMimeTypes[\"SchemePrefix\"] = \"x-scrypted/x-scrypted-scheme-\";\n    ScryptedMimeTypes[\"MediaStreamUrl\"] = \"text/x-media-url\";\n    ScryptedMimeTypes[\"MediaObject\"] = \"x-scrypted/x-scrypted-media-object\";\n    ScryptedMimeTypes[\"RequestMediaObject\"] = \"x-scrypted/x-scrypted-request-media-object\";\n    ScryptedMimeTypes[\"RequestMediaStream\"] = \"x-scrypted/x-scrypted-request-stream\";\n    ScryptedMimeTypes[\"MediaStreamFeedback\"] = \"x-scrypted/x-media-stream-feedback\";\n    ScryptedMimeTypes[\"FFmpegInput\"] = \"x-scrypted/x-ffmpeg-input\";\n    ScryptedMimeTypes[\"FFmpegTranscodeStream\"] = \"x-scrypted/x-ffmpeg-transcode-stream\";\n    ScryptedMimeTypes[\"RTCSignalingChannel\"] = \"x-scrypted/x-scrypted-rtc-signaling-channel\";\n    ScryptedMimeTypes[\"RTCSignalingSession\"] = \"x-scrypted/x-scrypted-rtc-signaling-session\";\n    ScryptedMimeTypes[\"RTCConnectionManagement\"] = \"x-scrypted/x-scrypted-rtc-connection-management\";\n    ScryptedMimeTypes[\"Image\"] = \"x-scrypted/x-scrypted-image\";\n})(ScryptedMimeTypes = exports.ScryptedMimeTypes || (exports.ScryptedMimeTypes = {}));\n//# sourceMappingURL=index.js.map","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug !== \"function\") {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Whether to use the native URL object or the legacy url module\nvar useNativeURL = false;\ntry {\n  assert(new URL());\n}\ncatch (error) {\n  useNativeURL = error.code === \"ERR_INVALID_URL\";\n}\n\n// URL fields to preserve in copy operations\nvar preservedUrlFields = [\n  \"auth\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"path\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"query\",\n  \"search\",\n  \"hash\",\n];\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar InvalidUrlError = createErrorType(\n  \"ERR_INVALID_URL\",\n  \"Invalid URL\",\n  TypeError\n);\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\",\n  RedirectionError\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// istanbul ignore next\nvar destroy = Writable.prototype.destroy || noop;\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    try {\n      self._processResponse(response);\n    }\n    catch (cause) {\n      self.emit(\"error\", cause instanceof RedirectionError ?\n        cause : new RedirectionError({ cause: cause }));\n    }\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  destroyRequest(this._currentRequest);\n  this._currentRequest.abort();\n  this.emit(\"abort\");\n};\n\nRedirectableRequest.prototype.destroy = function (error) {\n  destroyRequest(this._currentRequest, error);\n  destroy.call(this, error);\n  return this;\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!isString(data) && !isBuffer(data)) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (isFunction(data)) {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    self.removeListener(\"close\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n  this.on(\"close\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    throw new TypeError(\"Unsupported protocol \" + protocol);\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230§5.3.1: When making a request directly to an origin server, […]\n  // a client MUST send only the absolute path […] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, […]\n    // a client MUST send the target URI in absolute-form […].\n    this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  destroyRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231§6.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    throw new TooManyRedirectsError();\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231§6.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, […]\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource […]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) […]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = parseUrl(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Create the redirected request\n  var redirectUrl = resolveUrl(location, currentUrl);\n  debug(\"redirecting to\", redirectUrl.href);\n  this._isRedirect = true;\n  spreadUrlObject(redirectUrl, this._options);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrl.protocol !== currentUrlParts.protocol &&\n     redirectUrl.protocol !== \"https:\" ||\n     redirectUrl.host !== currentHost &&\n     !isSubdomain(redirectUrl.host, currentHost)) {\n    removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (isFunction(beforeRedirect)) {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    beforeRedirect(this._options, responseDetails, requestDetails);\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  this._performRequest();\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters, ensuring that input is an object\n      if (isURL(input)) {\n        input = spreadUrlObject(input);\n      }\n      else if (isString(input)) {\n        input = spreadUrlObject(parseUrl(input));\n      }\n      else {\n        callback = options;\n        options = validateUrl(input);\n        input = { protocol: protocol };\n      }\n      if (isFunction(options)) {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n      if (!isString(options.host) && !isString(options.hostname)) {\n        options.hostname = \"::1\";\n      }\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\nfunction noop() { /* empty */ }\n\nfunction parseUrl(input) {\n  var parsed;\n  /* istanbul ignore else */\n  if (useNativeURL) {\n    parsed = new URL(input);\n  }\n  else {\n    // Ensure the URL is valid and absolute\n    parsed = validateUrl(url.parse(input));\n    if (!isString(parsed.protocol)) {\n      throw new InvalidUrlError({ input });\n    }\n  }\n  return parsed;\n}\n\nfunction resolveUrl(relative, base) {\n  /* istanbul ignore next */\n  return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));\n}\n\nfunction validateUrl(input) {\n  if (/^\\[/.test(input.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(input.hostname)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  if (/^\\[/.test(input.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(input.host)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  return input;\n}\n\nfunction spreadUrlObject(urlObject, target) {\n  var spread = target || {};\n  for (var key of preservedUrlFields) {\n    spread[key] = urlObject[key];\n  }\n\n  // Fix IPv6 hostname\n  if (spread.hostname.startsWith(\"[\")) {\n    spread.hostname = spread.hostname.slice(1, -1);\n  }\n  // Ensure port is a number\n  if (spread.port !== \"\") {\n    spread.port = Number(spread.port);\n  }\n  // Concatenate path\n  spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;\n\n  return spread;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, message, baseClass) {\n  // Create constructor\n  function CustomError(properties) {\n    Error.captureStackTrace(this, this.constructor);\n    Object.assign(this, properties || {});\n    this.code = code;\n    this.message = this.cause ? message + \": \" + this.cause.message : message;\n  }\n\n  // Attach constructor and set default properties\n  CustomError.prototype = new (baseClass || Error)();\n  Object.defineProperties(CustomError.prototype, {\n    constructor: {\n      value: CustomError,\n      enumerable: false,\n    },\n    name: {\n      value: \"Error [\" + code + \"]\",\n      enumerable: false,\n    },\n  });\n  return CustomError;\n}\n\nfunction destroyRequest(request, error) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.destroy(error);\n}\n\nfunction isSubdomain(subdomain, domain) {\n  assert(isString(subdomain) && isString(domain));\n  var dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\nfunction isString(value) {\n  return typeof value === \"string\" || value instanceof String;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isBuffer(value) {\n  return typeof value === \"object\" && (\"length\" in value);\n}\n\nfunction isURL(value) {\n  return URL && value instanceof URL;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","import { httpFetch, httpFetchParseIncomingMessage } from '../../server/src/fetch/http-fetch';\nimport type { IncomingMessage } from 'http';\nimport type { Readable } from 'stream';\nimport { createAuthFetch } from '../../packages/auth-fetch/src/auth-fetch';\n\nexport type { HttpFetchOptions, HttpFetchResponseType } from '../../server/src/fetch/http-fetch';\nexport type { AuthFetchCredentialState, AuthFetchOptions } from '../../packages/auth-fetch/src/auth-fetch';\n\nexport const authHttpFetch = createAuthFetch<Readable, IncomingMessage>(httpFetch, httpFetchParseIncomingMessage);\n\nfunction ensureType<T>(v: T) {\n}\n\nasync function test() {\n    const a = await authHttpFetch({\n        credential: undefined,\n        url: 'http://example.com',\n    });\n\n    ensureType<Buffer>(a.body);\n\n    const b = await authHttpFetch({\n        credential: undefined,\n        url: 'http://example.com',\n        responseType: 'json',\n    });\n    ensureType<any>(b.body);\n\n    const c = await authHttpFetch({\n        credential: undefined,\n        url: 'http://example.com',\n        responseType: 'readable',\n    });\n    ensureType<IncomingMessage>(c.body);\n\n    const d = await authHttpFetch({\n        credential: undefined,\n        url: 'http://example.com',\n        responseType: 'buffer',\n    });\n    ensureType<Buffer>(d.body);\n\n    const e = await authHttpFetch({\n        credential: undefined,\n        url: 'http://example.com',\n        responseType: 'text',\n    });\n    ensureType<string>(e.body);\n}\n\n","import { HttpFetchOptions, HttpFetchResponseType, checkStatus, createHeadersArray, fetcher, getFetchMethod, hasHeader, setDefaultHttpFetchAccept, setHeader } from '../../../server/src/fetch';\n\nexport interface AuthFetchCredentialState {\n    username: string;\n    password: string;\n}\n\nexport interface AuthFetchOptions {\n    credential?: AuthFetchCredentialState;\n}\n\nasync function getAuth(options: AuthFetchOptions, url: string | URL, method: string) {\n    if (!options.credential)\n        return;\n\n    const { BASIC, DIGEST, parseWWWAuthenticateHeader } = await import('http-auth-utils');\n\n    const credential = options.credential as AuthFetchCredentialState & {\n        count?: number;\n        digest?: ReturnType<typeof parseWWWAuthenticateHeader<typeof DIGEST>>;\n        basic?: ReturnType<typeof parseWWWAuthenticateHeader<typeof BASIC>>;\n    };\n    const { digest, basic } = credential;\n\n    if (digest) {\n        credential.count ||= 0;\n        ++credential.count;\n        const nc = ('00000000' + credential.count).slice(-8);\n        const cnonce = [...Array(24)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');\n        const uri = new URL(url).pathname;\n\n        const { DIGEST, buildAuthorizationHeader } = await import('http-auth-utils');\n\n        const response = DIGEST.computeHash({\n            username: options.credential.username,\n            password: options.credential.password,\n            method,\n            uri,\n            nc,\n            cnonce,\n            algorithm: 'MD5',\n            qop: digest.data.qop!,\n            ...digest.data,\n        });\n\n        const header = buildAuthorizationHeader(DIGEST, {\n            username: options.credential.username,\n            uri,\n            nc,\n            cnonce,\n            algorithm: digest.data.algorithm!,\n            qop: digest.data.qop!,\n            response,\n            ...digest.data,\n        });\n\n        return header;\n    }\n    else if (basic) {\n        const { BASIC, buildAuthorizationHeader } = await import('http-auth-utils');\n\n        const header = buildAuthorizationHeader(BASIC, {\n            username: options.credential.username,\n            password: options.credential.password,\n        });\n\n        return header;\n    }\n}\n\nexport function createAuthFetch<B, M>(\n    h: fetcher<B, M>,\n    parser: (body: M, responseType: HttpFetchResponseType | undefined) => Promise<any>\n) {\n    const authHttpFetch = async <T extends HttpFetchOptions<B>>(options: T & AuthFetchOptions): ReturnType<typeof h<T>> => {\n        const method = getFetchMethod(options);\n        const headers = createHeadersArray(options.headers);\n        options.headers = headers;\n        setDefaultHttpFetchAccept(headers, options.responseType);\n\n        const initialHeader = await getAuth(options, options.url, method);\n        // try to provide an authorization if a session exists, but don't override Authorization if provided already.\n        // 401 will trigger a proper auth.\n        if (initialHeader && !hasHeader(headers, 'Authorization'))\n            setHeader(headers, 'Authorization', initialHeader);\n\n\n        const controller = new AbortController();\n        options.signal?.addEventListener('abort', () => controller.abort(options.signal?.reason));\n\n        const initialResponse = await h({\n            ...options,\n            signal: controller.signal,\n            // need to intercept the status code to check for 401.\n            // all other status codes will be handled according to the initial request options.\n            checkStatusCode(statusCode) {\n                // can handle a 401 if an credential is provided.\n                // however, not providing a credential is also valid, and should\n                // fall through to the normal response handling which may be interested\n                // in the 401 response.\n                if (statusCode === 401 && options.credential)\n                    return true;\n                if (options?.checkStatusCode === undefined || options?.checkStatusCode) {\n                    const checker = typeof options?.checkStatusCode === 'function' ? options.checkStatusCode : checkStatus;\n                    return checker(statusCode);\n                }\n                return true;\n            },\n            responseType: 'readable',\n        });\n\n        // if it's not a 401, just return the response.\n        if (initialResponse.statusCode !== 401) {\n            return {\n                ...initialResponse,\n                body: await parser(initialResponse.body, options.responseType),\n            };\n        }\n\n        let authenticateHeaders: string | string[] | null = initialResponse.headers.get('www-authenticate');\n        if (!authenticateHeaders)\n            throw new Error('Did not find WWW-Authenticate header.');\n\n\n        if (typeof authenticateHeaders === 'string')\n            authenticateHeaders = [authenticateHeaders];\n\n        const { BASIC, DIGEST, parseWWWAuthenticateHeader } = await import('http-auth-utils');\n        const parsedHeaders = authenticateHeaders.map(h => parseWWWAuthenticateHeader(h));\n\n        const digest = parsedHeaders.find(p => p.type === 'Digest') as ReturnType<typeof parseWWWAuthenticateHeader<typeof DIGEST>>;\n        const basic = parsedHeaders.find(p => p.type === 'Basic') as ReturnType<typeof parseWWWAuthenticateHeader<typeof BASIC>>;\n        const credential = options.credential as AuthFetchCredentialState & {\n            count?: number;\n            digest?: ReturnType<typeof parseWWWAuthenticateHeader<typeof DIGEST>>;\n            basic?: ReturnType<typeof parseWWWAuthenticateHeader<typeof BASIC>>;\n        };\n\n        credential.digest = digest;\n        credential.basic = basic;\n\n        if (!digest && !basic)\n            throw new Error(`Unknown WWW-Authenticate type: ${parsedHeaders[0]?.type}`);\n\n        const header = await getAuth(options, options.url, method);\n        if (header)\n            setHeader(headers, 'Authorization', header);\n\n        return h(options);\n    }\n\n    return authHttpFetch;\n}\n","import { AxiosRequestConfig } from 'axios';\nimport { AuthFetchCredentialState, AuthFetchOptions, HttpFetchOptions, authHttpFetch } from '@scrypted/common/src/http-auth-fetch';\nimport { EventEmitter } from 'events';\nimport sdk, { MediaObject } from '@scrypted/sdk';\nimport { Readable } from 'node:stream';\n\nconst { mediaManager } = sdk;\n\nexport class AxisAPI {\n    credential: AuthFetchCredentialState;\n\n    constructor(public ip: string, username: string, password: string, public console: Console) {\n        this.credential = {\n            username,\n            password,\n        };\n    }\n\n    async request(config: AxiosRequestConfig) {\n        const response = await authHttpFetch({\n            ...config,\n            rejectUnauthorized: false,\n            credential: this.credential,\n        } as HttpFetchOptions<Readable> & AuthFetchOptions); // add this cast\n        return response;\n    }\n\n    async getDeviceInfo() {\n        const response = await this.request({\n            url: `http://${this.ip}/axis-cgi/param.cgi?action=list&group=root.Properties`,\n            responseType: 'text',\n        });\n\n        const lines = response.body.split('\\n');\n        const info: any = {};\n        lines.forEach(line => {\n            const [key, value] = line.split('=');\n            if (key && value) {\n                info[key.trim()] = value.trim();\n            }\n        });\n\n        return {\n            model: info['root.Properties.System.HardwareID'],\n            firmware: info['root.Properties.Firmware.Version'],\n            serialNumber: info['root.Properties.System.SerialNumber'],\n        };\n    }\n\n    async getVideoStreamOptions() {\n        const response = await this.request({\n            url: `http://${this.ip}/axis-cgi/param.cgi?action=list&group=root.StreamProfile`,\n            responseType: 'text',\n        });\n\n        const lines = response.body.split('\\n');\n        const streamProfiles: any = {};\n        lines.forEach(line => {\n            const [key, value] = line.split('=');\n            if (key && value) {\n                const [group, profile, param] = key.split('.');\n                if (!streamProfiles[profile]) {\n                    streamProfiles[profile] = {};\n                }\n                streamProfiles[profile][param] = value.trim();\n            }\n        });\n\n        return Object.entries(streamProfiles).map(([profile, params]: [string, any]) => ({\n            id: profile,\n            name: params.Name || profile,\n            url: null, // Will be set in the AxisCamera class\n            path: `/axis-media/media.amp?streamprofile=${profile}`,\n            video: {\n                codec: params.VideoEncoder || 'h264',\n                width: parseInt(params.Resolution.split('x')[0]),\n                height: parseInt(params.Resolution.split('x')[1]),\n            },\n            audio: params.AudioEncoder ? {\n                codec: params.AudioEncoder,\n            } : undefined,\n        }));\n    }\n\n    async subscribeToEvents(): Promise<EventEmitter> {\n        const eventEmitter = new EventEmitter();\n        \n        const response = await this.request({\n            url: `http://${this.ip}/axis-cgi/event/oneevent.cgi`,\n            responseType: 'stream',\n        });\n\n        const stream = response.body;\n        stream.on('data', (chunk: Buffer) => {\n            const data = chunk.toString();\n            if (data.includes('MotionDetection')) {\n                const active = data.includes('active=yes');\n                eventEmitter.emit('MotionDetected', active);\n            }\n        });\n\n        return eventEmitter;\n    }\n\n    async takeSnapshot(): Promise<Buffer> {\n        const response = await this.request({\n            url: `http://${this.ip}/axis-cgi/jpg/image.cgi`,\n            responseType: 'arraybuffer',\n        });\n        return Buffer.from(response.body);\n    }\n}","import sdk, { Camera, Device, DeviceCreator, DeviceCreatorSettings, DeviceProvider, MediaObject, PictureOptions, ScryptedDeviceType, ScryptedInterface, Setting } from \"@scrypted/sdk\";\nimport { RtspProvider, RtspSmartCamera, UrlMediaStreamOptions } from \"../../rtsp/src/rtsp\";\nimport { AxisAPI } from \"./axis-api\";\n\nconst { mediaManager } = sdk;\n\nclass AxisCamera extends RtspSmartCamera implements Camera {\n    takeSmartCameraPicture(options?: PictureOptions | undefined): Promise<MediaObject> {\n        throw new Error(\"Method not implemented.\");\n    }\n    getConstructedVideoStreamOptions(): Promise<UrlMediaStreamOptions[]> {\n        throw new Error(\"Method not implemented.\");\n    }\n    api: AxisAPI;\n\n    constructor(nativeId: string, provider: Device) {\n        super(nativeId, provider);\n        this.newMethod().api = new AxisAPI(this.getHttpAddress(), this.getUsername(), this.getPassword(), this.console);\n        this.updateDevice();\n        this.listenEvents();\n    }\n\n    private newMethod() {\n        return this;\n    }\n\n    getHttpAddress(): string {\n        return this.storage.getItem('ip') || '';\n    }\n\n    getUsername(): string {\n        return this.storage.getItem('username') || '';\n    }\n\n    getPassword(): string {\n        return this.storage.getItem('password') || '';\n    }\n\n    async updateDevice() {\n        const interfaces = [\n            ScryptedInterface.VideoCamera,\n            ScryptedInterface.Camera,\n            ScryptedInterface.MotionSensor,\n        ];\n        \n        this.provider.updateDevice(this.nativeId, this.name, interfaces, ScryptedDeviceType.Camera);\n    }\n\n    async getVideoStreamOptions(): Promise<UrlMediaStreamOptions[]> {\n        try {\n            const streamOptions = await this.api.getVideoStreamOptions();\n            return streamOptions.map(option => ({\n                ...option,\n                url: `rtsp://${this.getUsername()}:${this.getPassword()}@${this.getHttpAddress()}${option.path}`,\n                tool: 'ffmpeg' as MediaStream['tool'],\n            }));\n        } catch (error) {\n            this.console.error('Error getting video stream options:', error);\n            return [];\n        }\n    }\n\n    async listenEvents() {\n        try {\n            const events = await this.api.subscribeToEvents();\n            events.on('MotionDetected', (active: boolean) => {\n                this.motionDetected = active;\n            });\n        } catch (error) {\n            this.console.error('Error subscribing to events:', error);\n        }\n    }\n\n    async takePicture(): Promise<MediaObject> {\n        try {\n            const imageBuffer = await this.api.takeSnapshot();\n            return mediaManager.createMediaObject(imageBuffer, 'image/jpeg');\n        } catch (error) {\n            this.console.error('Error taking picture:', error);\n            throw error;\n        }\n    }\n\n    getPictureOptions() {\n        return null;\n    }\n}\n\nclass AxisProvider extends RtspProvider implements DeviceProvider, DeviceCreator {\n    getScryptedDeviceCreator(): string {\n        throw new Error(\"Method not implemented.\");\n    }\n    getAdditionalInterfaces() {\n        return [\n            ScryptedInterface.VideoCamera,\n            ScryptedInterface.Camera,\n            ScryptedInterface.MotionSensor,\n        ];\n    }\n\n    createCamera(nativeId: string) {\n        return new AxisCamera(nativeId, this);\n    }\n\n    async createDevice(settings: DeviceCreatorSettings): Promise<string> {\n        const { ip, username, password } = settings;\n        \n        try {\n            const api = new AxisAPI(ip as string, username as string, password as string, this.console);\n            const deviceInfo = await api.getDeviceInfo();\n            \n            const nativeId = await super.createDevice(settings);\n            const camera = await this.getDevice(nativeId) as AxisCamera;\n            camera.putSetting('username', username);\n            camera.putSetting('password', password);\n            camera.putSetting('ip', ip as string);\n\n            camera.info = {\n                model: deviceInfo.model,\n                manufacturer: 'Axis',\n                firmware: deviceInfo.firmware,\n                serialNumber: deviceInfo.serialNumber,\n            };\n\n            return nativeId;\n        } catch (error) {\n            this.console.error('Error creating Axis camera device:', error);\n            throw error;\n        }\n    }\n\n    async getCreateDeviceSettings(): Promise<Setting[]> {\n        return [\n            {\n                key: 'username',\n                title: 'Username',\n                type: 'string',\n            },\n            {\n                key: 'password',\n                title: 'Password',\n                type: 'password',\n            },\n            {\n                key: 'ip',\n                title: 'IP Address',\n                placeholder: '192.168.1.100',\n                type: 'string',\n            },\n        ];\n    }\n}\n\nexport default AxisProvider;","import sdk, { Camera, DeviceCreator, DeviceCreatorSettings, DeviceProvider, MediaObject, PictureOptions, ResponseMediaStreamOptions, ScryptedDeviceBase, ScryptedDeviceType, ScryptedInterface, ScryptedNativeId, Setting, Settings, SettingValue, VideoCamera } from \"@scrypted/sdk\";\nimport { randomBytes } from \"crypto\";\n\nconst { deviceManager } = sdk;\n\nexport interface UrlMediaStreamOptions extends ResponseMediaStreamOptions {\n    url: string;\n}\n\nexport abstract class CameraBase<T extends ResponseMediaStreamOptions> extends ScryptedDeviceBase implements Camera, VideoCamera, Settings {\n    constructor(nativeId: string, public provider: CameraProviderBase<T>) {\n        super(nativeId);\n    }\n\n    takePicture(option?: PictureOptions): Promise<MediaObject> {\n        throw new Error(\"The RTSP Camera does not provide snapshots. Install the Snapshot Plugin if snapshots are available via an URL.\");\n    }\n\n    async getPictureOptions(): Promise<PictureOptions[]> {\n        return;\n    }\n\n    async getVideoStreamOptions(): Promise<T[]> {\n        const vsos = this.getRawVideoStreamOptions();\n        return vsos;\n    }\n\n    abstract getRawVideoStreamOptions(): T[];\n\n    isAudioDisabled() {\n        return this.storage.getItem('noAudio') === 'true';\n    }\n\n    async getVideoStream(options?: T): Promise<MediaObject> {\n        const vsos = await this.getVideoStreamOptions();\n        const vso = vsos?.find(s => s.id === options?.id) || this.getDefaultStream(vsos);\n        return this.createVideoStream(vso);\n    }\n\n    abstract createVideoStream(options?: T): Promise<MediaObject>;\n\n    async getUrlSettings(): Promise<Setting[]> {\n        return [\n        ];\n    }\n\n    getUsername() {\n        return this.storage.getItem('username');\n    }\n\n    getPassword() {\n        return this.storage.getItem('password');\n    }\n\n    async getOtherSettings(): Promise<Setting[]> {\n        return [];\n    }\n\n    getDefaultStream(vsos: T[]) {\n        return vsos?.[0];\n    }\n\n    async getStreamSettings(): Promise<Setting[]> {\n        return [];\n    }\n\n    getUsernameDescription(): string {\n        return 'Optional: Username for snapshot http requests.';\n    }\n\n    getPasswordDescription(): string {\n        return 'Optional: Password for snapshot http requests.';\n    }\n\n    async getSettings(): Promise<Setting[]> {\n        const ret: Setting[] = [\n            {\n                key: 'username',\n                title: 'Username',\n                value: this.getUsername(),\n                description: this.getUsernameDescription(),\n            },\n            {\n                key: 'password',\n                title: 'Password',\n                value: this.getPassword(),\n                type: 'password',\n                description: this.getPasswordDescription(),\n            },\n            ...await this.getUrlSettings(),\n            ...await this.getStreamSettings(),\n            ...await this.getOtherSettings(),\n            {\n                key: 'noAudio',\n                title: 'No Audio',\n                description: 'Enable this setting if the camera does not have audio or to mute audio.',\n                type: 'boolean',\n                value: (this.isAudioDisabled()).toString(),\n            },\n        ];\n\n        for (const s of ret) {\n            s.group = this.provider.name.replace('Plugin', '').trim();\n            s.subgroup ||= 'General';\n        }\n\n        return ret;\n    }\n\n    async putSettingBase(key: string, value: SettingValue) {\n        if (key === 'defaultStream') {\n            const vsos = await this.getVideoStreamOptions();\n            const stream = vsos.find(vso => vso.name === value);\n            this.storage.setItem('defaultStream', stream?.id || '');\n        }\n        else {\n            this.storage.setItem(key, value.toString());\n        }\n\n        this.onDeviceEvent(ScryptedInterface.Settings, undefined);\n    }\n\n    async putSetting(key: string, value: SettingValue) {\n        this.putSettingBase(key, value);\n    }\n}\n\nexport abstract class CameraProviderBase<T extends ResponseMediaStreamOptions> extends ScryptedDeviceBase implements DeviceProvider, DeviceCreator {\n    devices = new Map<string, any>();\n\n    constructor(nativeId?: string) {\n        super(nativeId);\n\n        this.systemDevice = {\n            deviceCreator: this.getScryptedDeviceCreator(),\n        };\n    }\n\n    async createDevice(settings: DeviceCreatorSettings, nativeId?: ScryptedNativeId): Promise<string> {\n        nativeId ||= randomBytes(4).toString('hex');\n        const name = settings.newCamera?.toString() || 'New Camera';\n        await this.updateDevice(nativeId, name, this.getInterfaces());\n        return nativeId;\n    }\n\n    async getCreateDeviceSettings(): Promise<Setting[]> {\n        return [\n            {\n                key: 'newCamera',\n                title: 'Add Camera',\n                placeholder: 'Camera name, e.g.: Back Yard Camera, Baby Camera, etc',\n            }\n        ]\n    }\n\n    getAdditionalInterfaces(): string[] {\n        return [\n        ];\n    }\n\n    getInterfaces() {\n        return [\n            ScryptedInterface.VideoCamera,\n            ScryptedInterface.Settings,\n            ...this.getAdditionalInterfaces()\n        ];\n    }\n\n    updateDevice(nativeId: string, name: string, interfaces: string[], type?: ScryptedDeviceType) {\n        return deviceManager.onDeviceDiscovered({\n            nativeId,\n            name,\n            interfaces,\n            type: type || ScryptedDeviceType.Camera,\n            info: deviceManager.getNativeIds().includes(nativeId) ? deviceManager.getDeviceState(nativeId)?.info : undefined,\n        });\n    }\n\n    abstract createCamera(nativeId: string): CameraBase<T>;\n    abstract getScryptedDeviceCreator(): string;\n\n    getDevice(nativeId: string) {\n        let ret = this.devices.get(nativeId);\n        if (!ret) {\n            ret = this.createCamera(nativeId);\n            if (ret)\n                this.devices.set(nativeId, ret);\n        }\n        return ret;\n    }\n\n    async releaseDevice(id: string, nativeId: string): Promise<void> {\n        this.devices.delete(nativeId);\n    }\n}\n","import { timeoutPromise } from '@scrypted/common/src/promise-utils';\nimport sdk, { MediaObject, MediaStreamUrl, PictureOptions, RequestPictureOptions, ResponseMediaStreamOptions, ScryptedInterface, ScryptedMimeTypes, Setting, SettingValue } from \"@scrypted/sdk\";\nimport url from 'url';\nimport { CameraBase, CameraProviderBase, UrlMediaStreamOptions } from \"../../ffmpeg-camera/src/common\";\n\nexport { UrlMediaStreamOptions } from \"../../ffmpeg-camera/src/common\";\n\nconst { mediaManager } = sdk;\n\nexport class RtspCamera extends CameraBase<UrlMediaStreamOptions> {\n    takePicture(option?: PictureOptions): Promise<MediaObject> {\n        throw new Error(\"The RTSP Camera does not provide snapshots. Install the Snapshot Plugin if snapshots are available via an URL.\");\n    }\n\n    createRtspMediaStreamOptions(url: string, index: number): UrlMediaStreamOptions {\n        return {\n            id: `channel${index}`,\n            name: `Stream ${index + 1}`,\n            url,\n            container: 'rtsp',\n            video: {\n            },\n            audio: this.isAudioDisabled() ? null : {},\n        };\n    }\n\n    getChannelFromMediaStreamOptionsId(id: string) {\n        return id.substring('channel'.length);\n    }\n\n    getRawVideoStreamOptions(): UrlMediaStreamOptions[] {\n        let urls: string[] = [];\n        try {\n            urls = JSON.parse(this.storage.getItem('urls'));\n        }\n        catch (e) {\n            const url = this.storage.getItem('url');\n            if (url) {\n                urls.push(url);\n                this.storage.setItem('urls', JSON.stringify(urls));\n                this.storage.removeItem('url');\n            }\n        }\n\n        // filter out empty strings.\n        const ret = urls.filter(url => !!url).map((url, index) => this.createRtspMediaStreamOptions(url, index));\n\n        if (!ret.length)\n            return;\n        return ret;\n    }\n\n    addRtspCredentials(rtspUrl: string) {\n        // ignore this deprecation warning. the WHATWG URL class will trim the password\n        // off if it is empty, resulting in urls like rtsp://admin@foo.com/.\n        // this causes ffmpeg to fail on sending a blank password.\n        // we need to send it as follows: rtsp://admin:@foo.com/.\n        // Note the trailing colon.\n        // issue: https://github.com/koush/scrypted/issues/134\n        const parsedUrl = url.parse(rtspUrl);\n        this.console.log('stream url', rtspUrl);\n        const username = this.storage.getItem(\"username\");\n        const password = this.storage.getItem(\"password\");\n        if (username) {\n            // if a username is set, ensure a trailing colon is sent for blank password.\n            const auth = `${username}:${password || ''}`;\n            parsedUrl.auth = auth;\n        }\n\n        const stringUrl = url.format(parsedUrl);\n        return stringUrl;\n    }\n\n    createMediaStreamUrl(stringUrl: string, vso: ResponseMediaStreamOptions) {\n        const ret: MediaStreamUrl = {\n            container: vso.container,\n            url: stringUrl,\n            mediaStreamOptions: vso,\n        };\n\n        return this.createMediaObject(ret, ScryptedMimeTypes.MediaStreamUrl);\n    }\n\n    async createVideoStream(vso: UrlMediaStreamOptions): Promise<MediaObject> {\n        if (!vso)\n            throw new Error('video streams not set up or no longer exists.');\n\n        const stringUrl = this.addRtspCredentials(vso.url);\n        return this.createMediaStreamUrl(stringUrl, vso);\n    }\n\n    // hide the description from CameraBase that indicates it is only used for snapshots\n    getUsernameDescription(): string {\n        return;\n    }\n\n    // hide the description from CameraBase that indicates it is only used for snapshots\n    getPasswordDescription(): string {\n        return;\n    }\n\n    async getRtspUrlSettings(): Promise<Setting[]> {\n        return [\n            {\n                key: 'urls',\n                title: 'RTSP Stream URL',\n                description: 'An RTSP Stream URL provided by the camera.',\n                placeholder: 'rtsp://192.168.1.100[:554]/channel/101',\n                value: this.getRawVideoStreamOptions()?.map(vso => vso.url),\n                multiple: true,\n            },\n        ];\n    }\n\n    async getOtherSettings(): Promise<Setting[]> {\n        const ret: Setting[] = [];\n\n        ret.push(\n            {\n                subgroup: 'Advanced',\n                key: 'debug',\n                title: 'Debug Events',\n                description: \"Log all events to the console. This will be very noisy and should not be left enabled.\",\n                value: this.storage.getItem('debug') === 'true',\n                type: 'boolean',\n            }\n        )\n        return ret;\n    }\n\n    async getUrlSettings(): Promise<Setting[]> {\n        return [\n            ...await this.getRtspUrlSettings(),\n        ];\n    }\n\n    async putRtspUrls(urls: string[]) {\n        this.storage.setItem('urls', JSON.stringify(urls.filter(url => !!url)));\n        this.onDeviceEvent(ScryptedInterface.Settings, undefined);\n    }\n\n    async putSettingBase(key: string, value: SettingValue) {\n        if (key === 'urls') {\n            this.putRtspUrls(value as string[]);\n        }\n        else {\n            super.putSettingBase(key, value);\n        }\n    }\n}\n\nexport interface Destroyable {\n    on(eventName: string | symbol, listener: (...args: any[]) => void): void;\n    destroy(): void;\n    emit(eventName: string | symbol, ...args: any[]): boolean;\n}\n\nexport abstract class RtspSmartCamera extends RtspCamera {\n    lastListen = 0;\n    listener: Promise<Destroyable>;\n\n    constructor(nativeId: string, provider: RtspProvider) {\n        super(nativeId, provider);\n        process.nextTick(() => this.listenLoop());\n    }\n\n    resetSensors(): void {\n        if (this.interfaces.includes(ScryptedInterface.MotionSensor))\n            this.motionDetected = false;\n        if (this.interfaces.includes(ScryptedInterface.AudioSensor))\n            this.audioDetected = false;\n        if (this.interfaces.includes(ScryptedInterface.TamperSensor))\n            this.tampered = false;\n        if (this.interfaces.includes(ScryptedInterface.BinarySensor))\n            this.binaryState = false;\n    }\n\n    async listenLoop() {\n        this.resetSensors();\n        this.lastListen = Date.now();\n        if (this.listener)\n            return;\n\n        let listener: Destroyable;\n        const listenerPromise = this.listener = this.listenEvents();\n\n        let activityTimeout: NodeJS.Timeout;\n        const restartListener = () => {\n            if (listenerPromise === this.listener)\n                this.listener = undefined;\n            clearTimeout(activityTimeout);\n            listener?.destroy();\n            const listenDuration = Date.now() - this.lastListen;\n            const listenNext = listenDuration > 10000 ? 0 : 10000;\n            setTimeout(() => this.listenLoop(), listenNext);\n        }\n\n        try {\n            listener = await this.listener;\n        }\n        catch (e) {\n            this.console.error('listen loop connection failed, restarting listener.', e.message);\n            restartListener();\n            return;\n        }\n\n        const resetActivityTimeout = () => {\n            clearTimeout(activityTimeout);\n            activityTimeout = setTimeout(() => {\n                this.console.error('listen loop 5m idle timeout, destroying listener.');\n                restartListener();\n            }, 300000);\n        }\n        resetActivityTimeout();\n\n        listener.on('data', (data) => {\n            if (this.storage.getItem('debug') === 'true')\n                this.console.log('debug event:\\n', data.toString());\n            resetActivityTimeout();\n        });\n\n        listener.on('close', () => {\n            this.console.error('listen loop closed, restarting listener.');\n            restartListener();\n        });\n\n        listener.on('error', e => {\n            this.console.error('listen loop error, restarting listener.', e);\n            restartListener();\n        });\n    }\n\n    async putSetting(key: string, value: SettingValue) {\n        this.putSettingBase(key, value);\n        this.listener.then(l => l.emit('error', new Error(\"new settings\")));\n    }\n\n    async takePicture(options?: RequestPictureOptions) {\n        return this.takeSmartCameraPicture(options);\n    }\n\n    abstract takeSmartCameraPicture(options?: PictureOptions): Promise<MediaObject>;\n\n    async getRtspUrlSettings(): Promise<Setting[]> {\n        return [\n            {\n                key: 'urls',\n                title: 'RTSP Stream URL Override',\n                description: 'Override the RTSP Stream URL provided by the camera.',\n                placeholder: 'rtsp://192.168.1.100[:554]/channel/101',\n                value: this.getRawVideoStreamOptions()?.map(vso => vso.url),\n                multiple: true,\n            },\n        ];\n    }\n\n    async getUrlSettings() {\n        const ret: Setting[] = [\n            {\n                key: 'ip',\n                title: 'IP Address',\n                placeholder: '192.168.1.100',\n                value: this.storage.getItem('ip'),\n            },\n            ...this.getHttpPortOverrideSettings(),\n            ...await this.getRtspPortOverrideSettings(),\n        ];\n\n        if (this.showRtspUrlOverride()) {\n            const legacyOverride = this.storage.getItem('rtspUrlOverride')\n            if (legacyOverride) {\n                await this.putRtspUrls([legacyOverride]);\n                this.storage.removeItem('rtspUrlOverride');\n            }\n\n            ret.push(\n                ... await this.getRtspUrlSettings(),\n            );\n        }\n\n        return ret;\n    }\n\n    getHttpPortOverrideSettings() {\n        if (!this.showHttpPortOverride()) {\n            return [];\n        }\n        return [\n            {\n                key: 'httpPort',\n                subgroup: 'Advanced',\n                title: 'HTTP Port Override',\n                placeholder: '80',\n                value: this.storage.getItem('httpPort'),\n            }\n        ];\n    }\n\n    showHttpPortOverride() {\n        return true;\n    }\n\n    async getRtspPortOverrideSettings(): Promise<Setting[]> {\n        if (!this.showRtspPortOverride()) {\n            return [];\n        }\n        return [\n            {\n                key: 'rtspPort',\n                subgroup: 'Advanced',\n                title: 'RTSP Port Override',\n                placeholder: '554',\n                value: this.storage.getItem('rtspPort'),\n            },\n        ];\n    }\n\n    showRtspPortOverride() {\n        return true;\n    }\n\n    showRtspUrlOverride() {\n        return true;\n    }\n\n    getHttpAddress() {\n        return `${this.getIPAddress()}:${this.storage.getItem('httpPort') || 80}`;\n    }\n\n    setHttpPortOverride(port: string) {\n        this.storage.setItem('httpPort', port || '');\n    }\n\n    getRtspUrlOverride() {\n        if (!this.showRtspUrlOverride())\n            return;\n        return this.storage.getItem('rtspUrlOverride');\n    }\n\n    abstract getConstructedVideoStreamOptions(): Promise<UrlMediaStreamOptions[]>;\n    abstract listenEvents(): Promise<Destroyable>;\n\n    getIPAddress() {\n        return this.storage.getItem('ip');\n    }\n\n    setIPAddress(ip: string) {\n        return this.storage.setItem('ip', ip);\n    }\n\n    getRtspAddress() {\n        return `${this.getIPAddress()}:${this.storage.getItem('rtspPort') || 554}`;\n    }\n\n    constructedVideoStreamOptions: Promise<UrlMediaStreamOptions[]>;\n    async getVideoStreamOptions(): Promise<UrlMediaStreamOptions[]> {\n        if (this.showRtspUrlOverride()) {\n            const vsos = await super.getVideoStreamOptions();\n            if (vsos)\n                return vsos;\n        }\n\n        if (this.constructedVideoStreamOptions)\n            return this.constructedVideoStreamOptions;\n\n        this.constructedVideoStreamOptions = timeoutPromise(5000, this.getConstructedVideoStreamOptions()).finally(() => {\n            this.constructedVideoStreamOptions = undefined;\n        });\n\n        return this.constructedVideoStreamOptions;\n    }\n\n    putSettingBase(key: string, value: SettingValue): Promise<void> {\n        this.constructedVideoStreamOptions = undefined;\n        return super.putSettingBase(key, value);\n    }\n}\n\nexport abstract class RtspProvider extends CameraProviderBase<UrlMediaStreamOptions> {\n    createCamera(nativeId: string): RtspCamera {\n        return new RtspCamera(nativeId, this);\n    }\n}\n","import type events from 'events';\nimport type followRedirects from 'follow-redirects';\nimport type { IncomingMessage } from 'http';\nimport type stream from 'stream';\nimport type { Readable } from 'stream';\nimport { HttpFetchBufferOptions, HttpFetchJsonOptions, HttpFetchOptions, HttpFetchReadableOptions, HttpFetchResponse, HttpFetchResponseType, HttpFetchTextOptions, checkStatus, createHeadersArray, createStringOrBufferBody, getFetchMethod, setDefaultHttpFetchAccept } from '.';\nexport type { HttpFetchBufferOptions, HttpFetchJsonOptions, HttpFetchOptions, HttpFetchReadableOptions, HttpFetchResponse, HttpFetchResponseType, HttpFetchTextOptions, checkStatus, setDefaultHttpFetchAccept } from '.';\n\nasync function readMessageBuffer(response: IncomingMessage) {\n    const buffers: Buffer[] = [];\n    response.on('data', buffer => buffers.push(buffer));\n    const { once } = require('events') as typeof events;\n    await once(response, 'end');\n    return Buffer.concat(buffers);\n}\n\nexport interface FetchParser<T> {\n    parse(message: IncomingMessage): Promise<T>;\n}\n\nconst TextParser: FetchParser<string> = {\n    async parse(message: IncomingMessage) {\n        return (await readMessageBuffer(message)).toString();\n    }\n}\nconst JSONParser: FetchParser<any> = {\n    async parse(message: IncomingMessage) {\n        return JSON.parse((await readMessageBuffer(message)).toString());\n    }\n}\n\nconst BufferParser: FetchParser<Buffer> = {\n    async parse(message: IncomingMessage) {\n        return readMessageBuffer(message);\n    }\n}\n\nconst StreamParser: FetchParser<IncomingMessage> = {\n    async parse(message: IncomingMessage) {\n        return message;\n    }\n}\n\nexport function getHttpFetchParser(responseType: HttpFetchResponseType | undefined) {\n    switch (responseType) {\n        case 'json':\n            return JSONParser;\n        case 'text':\n            return TextParser;\n        case 'readable':\n            return StreamParser;\n    }\n    return BufferParser;\n}\n\nexport function httpFetchParseIncomingMessage(readable: IncomingMessage, responseType: HttpFetchResponseType | undefined) {\n    return getHttpFetchParser(responseType).parse(readable);\n}\n\nexport async function httpFetch<T extends HttpFetchOptions<Readable>>(options: T): Promise<HttpFetchResponse<\n    // first one serves as default.\n    T extends HttpFetchBufferOptions<Readable> ? Buffer\n    : T extends HttpFetchTextOptions<Readable> ? string\n    : T extends HttpFetchReadableOptions<Readable> ? IncomingMessage\n    : T extends HttpFetchJsonOptions<Readable> ? any : Buffer\n>> {\n    const headers = createHeadersArray(options.headers);\n    setDefaultHttpFetchAccept(headers, options.responseType);\n\n    const { once } = require('events') as typeof events;\n    const { PassThrough, Readable } = require('stream') as typeof stream;\n    const { http, https } = require('follow-redirects') as typeof followRedirects;\n\n    const { url } = options;\n    const isSecure = url.toString().startsWith('https:');\n    const proto = isSecure ? https : http;\n\n    let { body } = options;\n    if (body && !(body instanceof Readable)) {\n        const newBody = new PassThrough();\n        newBody.write(Buffer.from(createStringOrBufferBody(headers, body)));\n        newBody.end();\n        body = newBody;\n    }\n\n    let controller: AbortController;\n    let timeout: NodeJS.Timeout;\n    if (options.timeout) {\n        controller = new AbortController();\n        timeout = setTimeout(() => controller.abort(), options.timeout);\n\n        options.signal?.addEventListener('abort', () => controller.abort(options.signal?.reason));\n    }\n\n    const signal = controller?.signal || options.signal;\n    signal?.addEventListener('abort', () => request.destroy(new Error(options.signal?.reason || 'abort')));\n\n    const nodeHeaders: Record<string, string[]> = {};\n    for (const [k, v] of headers) {\n        if (nodeHeaders[k]) {\n            nodeHeaders[k].push(v);\n        }\n        else {\n            nodeHeaders[k] = [v];\n        }\n    }\n\n    const request = proto.request(url, {\n        method: getFetchMethod(options),\n        rejectUnauthorized: options.rejectUnauthorized,\n        family: options.family,\n        headers: nodeHeaders,\n        signal,\n        timeout: options.timeout,\n    });\n\n    if (body)\n        body.pipe(request);\n    else\n        request.end();\n\n    try {\n        const [response] = await once(request, 'response') as [IncomingMessage];\n\n\n        if (options?.checkStatusCode === undefined || options?.checkStatusCode) {\n            try {\n                const checker = typeof options?.checkStatusCode === 'function' ? options.checkStatusCode : checkStatus;\n                if (!checker(response.statusCode))\n                    throw new Error(`http response statusCode ${response.statusCode}`);\n            }\n            catch (e) {\n                readMessageBuffer(response).catch(() => { });\n                throw e;\n            }\n        }\n\n        const incomingHeaders = new Headers();\n        for (const [k, v] of Object.entries(response.headers)) {\n            for (const vv of (typeof v === 'string' ? [v] : v)) {\n                incomingHeaders.append(k, vv)\n            }\n        }\n\n        return {\n            statusCode: response.statusCode,\n            headers: incomingHeaders,\n            body: await httpFetchParseIncomingMessage(response, options.responseType),\n        };\n    }\n    finally {\n        clearTimeout(timeout);\n    }\n}\n\n","export type HttpFetchResponseType = 'json' | 'text' | 'buffer' | 'readable';\nexport interface HttpFetchOptionsBase<B> {\n    url: string | URL;\n    family?: 4 | 6;\n    method?: string;\n    headers?: HeadersInit;\n    signal?: AbortSignal,\n    timeout?: number;\n    rejectUnauthorized?: boolean;\n    /**\n     * Checks the status code. Defaults to true.\n     */\n    checkStatusCode?: boolean | ((statusCode: number) => boolean);\n    body?: B | string | ArrayBufferView | any;\n    withCredentials?: boolean;\n}\n\nexport interface HttpFetchJsonOptions<B> extends HttpFetchOptionsBase<B> {\n    responseType: 'json';\n}\n\nexport interface HttpFetchBufferOptions<B> extends HttpFetchOptionsBase<B> {\n    responseType: 'buffer';\n}\n\nexport interface HttpFetchDefaultOptions<B> extends HttpFetchOptionsBase<B> {\n    responseType?: undefined;\n}\n\nexport interface HttpFetchTextOptions<B> extends HttpFetchOptionsBase<B> {\n    responseType: 'text';\n}\nexport interface HttpFetchReadableOptions<B> extends HttpFetchOptionsBase<B> {\n    responseType: 'readable';\n}\n\nexport type HttpFetchOptions<B> = HttpFetchJsonOptions<B> | HttpFetchBufferOptions<B> | HttpFetchDefaultOptions<B> | HttpFetchTextOptions<B> | HttpFetchReadableOptions<B>;\n\nexport function fetchStatusCodeOk(statusCode: number) {\n    return statusCode >= 200 && statusCode <= 299;\n}\n\nexport function checkStatus(statusCode: number) {\n    if (!fetchStatusCodeOk(statusCode))\n        throw new Error(`http response statusCode ${statusCode}`);\n    return true;\n}\n\nexport function getFetchMethod(options: HttpFetchOptions<any>) {\n    const method = options.method || (options.body ? 'POST' : 'GET');\n    return method;\n}\n\nexport interface HttpFetchResponse<T> {\n    statusCode: number;\n    headers: Headers;\n    body: T;\n}\n\nexport type fetcher<B, M> = <T extends HttpFetchOptions<B>>(options: T) => Promise<HttpFetchResponse<\n    // first one serves as default.\n    T extends HttpFetchBufferOptions<B> ? Buffer\n    : T extends HttpFetchTextOptions<B> ? string\n    : T extends HttpFetchReadableOptions<B> ? M\n    : T extends HttpFetchJsonOptions<B> ? any : Buffer\n>>;\n\n\nexport function getHttpFetchAccept(responseType: HttpFetchResponseType | undefined) {\n    switch (responseType) {\n        case 'json':\n            return 'application/json';\n        case 'text':\n            return 'text/plain';\n    }\n    return;\n}\n\nexport function hasHeader(headers: [string, string][], key: string) {\n    key = key.toLowerCase();\n    return headers.find(([k]) => k.toLowerCase() === key);\n}\n\nexport function removeHeader(headers: [string, string][], key: string) {\n    key = key.toLowerCase();\n    const filteredHeaders = headers.filter(([headerKey, _]) => headerKey.toLowerCase() !== key);\n    headers.length = 0;\n    filteredHeaders.forEach(header => headers.push(header));\n}\n\nexport function setHeader(headers: [string, string][], key: string, value: string) {\n    removeHeader(headers, key);\n    headers.push([key, value]);\n}\n\nexport function setDefaultHttpFetchAccept(headers: [string, string][], responseType: HttpFetchResponseType | undefined) {\n    if (hasHeader(headers, 'Accept'))\n        return;\n    const accept = getHttpFetchAccept(responseType);\n    if (accept)\n        setHeader(headers, 'Accept', accept);\n}\n\nexport function createHeadersArray(headers: HeadersInit | undefined): [string, string][] {\n    const headersArray: [string, string][] = [];\n    if (!headers)\n        return headersArray;\n    if (headers instanceof Headers) {\n        for (const [k, v] of headers.entries()) {\n            headersArray.push([k, v]);\n        }\n        return headersArray;\n    }\n\n    if (headers instanceof Array) {\n        for (const [k, v] of headers) {\n            headersArray.push([k, v]);\n        }\n        return headersArray;\n    }\n\n    for (const k of Object.keys(headers)) {\n        const v = headers[k];\n        headersArray.push([k, v]);\n    }\n\n    return headersArray;\n}\n\n/**\n *\n * @param headers\n * @param body\n * @returns Returns the body and Content-Type header that was set.\n */\nexport function createStringOrBufferBody(headers: [string, string][], body: any) {\n    let contentType: string;\n    if (typeof body === 'object') {\n        body = JSON.stringify(body);\n        contentType = 'application/json';\n    }\n    else if (typeof body === 'string') {\n        contentType = 'text/plain';\n    }\n\n    if (!hasHeader(headers, 'Content-Type'))\n        setHeader(headers, 'Content-Type', contentType);\n    return body;\n}\n\nexport async function domFetchParseIncomingMessage(response: Response, responseType: HttpFetchResponseType | undefined) {\n    switch (responseType) {\n        case 'json':\n            return response.json();\n        case 'text':\n            return response.text();\n        case 'readable':\n            return response;\n    }\n    return new Uint8Array(await response.arrayBuffer());\n}\n\nexport async function domFetch<T extends HttpFetchOptions<BodyInit>>(options: T): Promise<HttpFetchResponse<\n    // first one serves as default.\n    T extends HttpFetchBufferOptions<BodyInit> ? Buffer\n    : T extends HttpFetchTextOptions<BodyInit> ? string\n    : T extends HttpFetchReadableOptions<BodyInit> ? Response\n    : T extends HttpFetchJsonOptions<BodyInit> ? any : Buffer\n>> {\n    const headers = createHeadersArray(options.headers);\n    setDefaultHttpFetchAccept(headers, options.responseType);\n\n    let { body } = options;\n    if (body && !(body instanceof ReadableStream)) {\n        body = createStringOrBufferBody(headers, body);\n    }\n\n    let controller: AbortController;\n    let timeout: NodeJS.Timeout;\n    if (options.timeout) {\n        controller = new AbortController();\n        timeout = setTimeout(() => controller.abort(), options.timeout);\n\n        options.signal?.addEventListener('abort', () => controller.abort(options.signal?.reason));\n    }\n\n    try {\n        const { url } = options;\n        const response = await fetch(url, {\n            method: getFetchMethod(options),\n            credentials: options.withCredentials ? 'include' : undefined,\n            headers,\n            signal: controller?.signal || options.signal,\n            body,\n        });\n\n        if (options?.checkStatusCode === undefined || options?.checkStatusCode) {\n            try {\n                const checker = typeof options?.checkStatusCode === 'function' ? options.checkStatusCode : checkStatus;\n                if (!checker(response.status))\n                    throw new Error(`http response statusCode ${response.status}`);\n            }\n            catch (e) {\n                response.arrayBuffer().catch(() => { });\n                throw e;\n            }\n        }\n\n        return {\n            statusCode: response.status,\n            headers: response.headers,\n            body: await domFetchParseIncomingMessage(response, options.responseType),\n        };\n    }\n    finally {\n        clearTimeout(timeout);\n    }\n}\n","module.exports = require(\"assert\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"stream\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}